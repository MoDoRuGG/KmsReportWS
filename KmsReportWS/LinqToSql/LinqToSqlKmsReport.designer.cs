#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KmsReportWS.LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="kms_report")]
	public partial class LinqToSqlKmsReportDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertResponsible_Employee(Responsible_Employee instance);
    partial void UpdateResponsible_Employee(Responsible_Employee instance);
    partial void DeleteResponsible_Employee(Responsible_Employee instance);
    partial void InsertReport_Data(Report_Data instance);
    partial void UpdateReport_Data(Report_Data instance);
    partial void DeleteReport_Data(Report_Data instance);
    partial void InsertReport_f262(Report_f262 instance);
    partial void UpdateReport_f262(Report_f262 instance);
    partial void DeleteReport_f262(Report_f262 instance);
    partial void InsertReport262_Table3(Report262_Table3 instance);
    partial void UpdateReport262_Table3(Report262_Table3 instance);
    partial void DeleteReport262_Table3(Report262_Table3 instance);
    partial void InsertReport_f294(Report_f294 instance);
    partial void UpdateReport_f294(Report_f294 instance);
    partial void DeleteReport_f294(Report_f294 instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertReport_Pg(Report_Pg instance);
    partial void UpdateReport_Pg(Report_Pg instance);
    partial void DeleteReport_Pg(Report_Pg instance);
    partial void InsertReport_Dynamic_Flow(Report_Dynamic_Flow instance);
    partial void UpdateReport_Dynamic_Flow(Report_Dynamic_Flow instance);
    partial void DeleteReport_Dynamic_Flow(Report_Dynamic_Flow instance);
    partial void InsertReport_Dynamic(Report_Dynamic instance);
    partial void UpdateReport_Dynamic(Report_Dynamic instance);
    partial void DeleteReport_Dynamic(Report_Dynamic instance);
    partial void InsertReport_Flow(Report_Flow instance);
    partial void UpdateReport_Flow(Report_Flow instance);
    partial void DeleteReport_Flow(Report_Flow instance);
    partial void InsertEmail(Email instance);
    partial void UpdateEmail(Email instance);
    partial void DeleteEmail(Email instance);
    partial void InsertReport_InfrormationResponse(Report_InfrormationResponse instance);
    partial void UpdateReport_InfrormationResponse(Report_InfrormationResponse instance);
    partial void DeleteReport_InfrormationResponse(Report_InfrormationResponse instance);
    partial void InsertReport_Oped(Report_Oped instance);
    partial void UpdateReport_Oped(Report_Oped instance);
    partial void DeleteReport_Oped(Report_Oped instance);
    partial void InsertReport_Vaccination(Report_Vaccination instance);
    partial void UpdateReport_Vaccination(Report_Vaccination instance);
    partial void DeleteReport_Vaccination(Report_Vaccination instance);
    partial void InsertScans_Base(Scans_Base instance);
    partial void UpdateScans_Base(Scans_Base instance);
    partial void DeleteScans_Base(Scans_Base instance);
    partial void InsertFSSMonitroing(FSSMonitroing instance);
    partial void UpdateFSSMonitroing(FSSMonitroing instance);
    partial void DeleteFSSMonitroing(FSSMonitroing instance);
    partial void InsertScan_Dynamic(Scan_Dynamic instance);
    partial void UpdateScan_Dynamic(Scan_Dynamic instance);
    partial void DeleteScan_Dynamic(Scan_Dynamic instance);
    partial void InsertReport_Dynamic_Data(Report_Dynamic_Data instance);
    partial void UpdateReport_Dynamic_Data(Report_Dynamic_Data instance);
    partial void DeleteReport_Dynamic_Data(Report_Dynamic_Data instance);
    partial void InsertReport_Proposal(Report_Proposal instance);
    partial void UpdateReport_Proposal(Report_Proposal instance);
    partial void DeleteReport_Proposal(Report_Proposal instance);
    partial void InsertReport_OpedFinance(Report_OpedFinance instance);
    partial void UpdateReport_OpedFinance(Report_OpedFinance instance);
    partial void DeleteReport_OpedFinance(Report_OpedFinance instance);
    partial void InsertOpedFinancePlan(OpedFinancePlan instance);
    partial void UpdateOpedFinancePlan(OpedFinancePlan instance);
    partial void DeleteOpedFinancePlan(OpedFinancePlan instance);
    partial void InsertReport_Type(Report_Type instance);
    partial void UpdateReport_Type(Report_Type instance);
    partial void DeleteReport_Type(Report_Type instance);
    partial void InsertReport_Iilz(Report_Iilz instance);
    partial void UpdateReport_Iilz(Report_Iilz instance);
    partial void DeleteReport_Iilz(Report_Iilz instance);
    #endregion
		
		public LinqToSqlKmsReportDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["kms_reportConnectionString4"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlKmsReportDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlKmsReportDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlKmsReportDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlKmsReportDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Responsible_Employee> Responsible_Employee
		{
			get
			{
				return this.GetTable<Responsible_Employee>();
			}
		}
		
		public System.Data.Linq.Table<Report_Data> Report_Data
		{
			get
			{
				return this.GetTable<Report_Data>();
			}
		}
		
		public System.Data.Linq.Table<Report_f262> Report_f262
		{
			get
			{
				return this.GetTable<Report_f262>();
			}
		}
		
		public System.Data.Linq.Table<Report262_Table3> Report262_Table3
		{
			get
			{
				return this.GetTable<Report262_Table3>();
			}
		}
		
		public System.Data.Linq.Table<Report_f294> Report_f294
		{
			get
			{
				return this.GetTable<Report_f294>();
			}
		}
		
		public System.Data.Linq.Table<Region> Region
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comment
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Report_Pg> Report_Pg
		{
			get
			{
				return this.GetTable<Report_Pg>();
			}
		}
		
		public System.Data.Linq.Table<NormativCpnpFederal> NormativCpnpFederal
		{
			get
			{
				return this.GetTable<NormativCpnpFederal>();
			}
		}
		
		public System.Data.Linq.Table<NormativCpnpRegion> NormativCpnpRegion
		{
			get
			{
				return this.GetTable<NormativCpnpRegion>();
			}
		}
		
		public System.Data.Linq.Table<Report_Dynamic_Flow> Report_Dynamic_Flow
		{
			get
			{
				return this.GetTable<Report_Dynamic_Flow>();
			}
		}
		
		public System.Data.Linq.Table<Report_Dynamic> Report_Dynamic
		{
			get
			{
				return this.GetTable<Report_Dynamic>();
			}
		}
		
		public System.Data.Linq.Table<Report_Flow> Report_Flow
		{
			get
			{
				return this.GetTable<Report_Flow>();
			}
		}
		
		public System.Data.Linq.Table<Email> Email
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<Report_InfrormationResponse> Report_InfrormationResponses
		{
			get
			{
				return this.GetTable<Report_InfrormationResponse>();
			}
		}
		
		public System.Data.Linq.Table<Report_Oped> Report_Opeds
		{
			get
			{
				return this.GetTable<Report_Oped>();
			}
		}
		
		public System.Data.Linq.Table<Report_Vaccination> Report_Vaccinations
		{
			get
			{
				return this.GetTable<Report_Vaccination>();
			}
		}
		
		public System.Data.Linq.Table<Scans_Base> Scans_Bases
		{
			get
			{
				return this.GetTable<Scans_Base>();
			}
		}
		
		public System.Data.Linq.Table<FSSMonitroing> FSSMonitroings
		{
			get
			{
				return this.GetTable<FSSMonitroing>();
			}
		}
		
		public System.Data.Linq.Table<Scan_Dynamic> Scan_Dynamics
		{
			get
			{
				return this.GetTable<Scan_Dynamic>();
			}
		}
		
		public System.Data.Linq.Table<Report_Dynamic_Data> Report_Dynamic_Datas
		{
			get
			{
				return this.GetTable<Report_Dynamic_Data>();
			}
		}
		
		public System.Data.Linq.Table<Report_Proposal> Report_Proposals
		{
			get
			{
				return this.GetTable<Report_Proposal>();
			}
		}
		
		public System.Data.Linq.Table<Report_OpedFinance> Report_OpedFinances
		{
			get
			{
				return this.GetTable<Report_OpedFinance>();
			}
		}
		
		public System.Data.Linq.Table<OpedFinancePlan> OpedFinancePlans
		{
			get
			{
				return this.GetTable<OpedFinancePlan>();
			}
		}
		
		public System.Data.Linq.Table<Report_Type> Report_Types
		{
			get
			{
				return this.GetTable<Report_Type>();
			}
		}
		
		public System.Data.Linq.Table<Report_Iilz> Report_Iilzs
		{
			get
			{
				return this.GetTable<Report_Iilz>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Responsible_Employee")]
	public partial class Responsible_Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Id_Report;
		
		private int _Id_Employee;
		
		private string _Inspection_Name;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Report_Type> _Report_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_ReportChanging(string value);
    partial void OnId_ReportChanged();
    partial void OnId_EmployeeChanging(int value);
    partial void OnId_EmployeeChanged();
    partial void OnInspection_NameChanging(string value);
    partial void OnInspection_NameChanged();
    #endregion
		
		public Responsible_Employee()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Report_Type = default(EntityRef<Report_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Id_Report
		{
			get
			{
				return this._Id_Report;
			}
			set
			{
				if ((this._Id_Report != value))
				{
					if (this._Report_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ReportChanging(value);
					this.SendPropertyChanging();
					this._Id_Report = value;
					this.SendPropertyChanged("Id_Report");
					this.OnId_ReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Employee", DbType="Int NOT NULL")]
		public int Id_Employee
		{
			get
			{
				return this._Id_Employee;
			}
			set
			{
				if ((this._Id_Employee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EmployeeChanging(value);
					this.SendPropertyChanging();
					this._Id_Employee = value;
					this.SendPropertyChanged("Id_Employee");
					this.OnId_EmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inspection_Name", DbType="VarChar(100)")]
		public string Inspection_Name
		{
			get
			{
				return this._Inspection_Name;
			}
			set
			{
				if ((this._Inspection_Name != value))
				{
					this.OnInspection_NameChanging(value);
					this.SendPropertyChanging();
					this._Inspection_Name = value;
					this.SendPropertyChanged("Inspection_Name");
					this.OnInspection_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Responsible_Employee", Storage="_Employee", ThisKey="Id_Employee", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Responsible_Employee.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Responsible_Employee.Add(this);
						this._Id_Employee = value.Id;
					}
					else
					{
						this._Id_Employee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Type_Responsible_Employee", Storage="_Report_Type", ThisKey="Id_Report", OtherKey="Id", IsForeignKey=true)]
		public Report_Type Report_Type
		{
			get
			{
				return this._Report_Type.Entity;
			}
			set
			{
				Report_Type previousValue = this._Report_Type.Entity;
				if (((previousValue != value) 
							|| (this._Report_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Type.Entity = null;
						previousValue.Responsible_Employees.Remove(this);
					}
					this._Report_Type.Entity = value;
					if ((value != null))
					{
						value.Responsible_Employees.Add(this);
						this._Id_Report = value.Id;
					}
					else
					{
						this._Id_Report = default(string);
					}
					this.SendPropertyChanged("Report_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Data")]
	public partial class Report_Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Id_Report;
		
		private int _Id_Flow;
		
		private string _Theme;
		
		private System.Nullable<decimal> _General_field_1;
		
		private System.Nullable<decimal> _General_field_2;
		
		private EntitySet<Report_f262> _Report_f262;
		
		private EntitySet<Report262_Table3> _Report262_Table3;
		
		private EntitySet<Report_f294> _Report_f294;
		
		private EntitySet<Report_Pg> _Report_Pg;
		
		private EntitySet<Report_InfrormationResponse> _Report_InfrormationResponses;
		
		private EntitySet<Report_Oped> _Report_Opeds;
		
		private EntitySet<Report_Vaccination> _Report_Vaccinations;
		
		private EntitySet<FSSMonitroing> _FSSMonitroings;
		
		private EntitySet<Report_Proposal> _Report_Proposals;
		
		private EntitySet<Report_OpedFinance> _Report_OpedFinances;
		
		private EntitySet<Report_Iilz> _Report_Iilzs;
		
		private EntityRef<Report_Flow> _Report_Flow;
		
		private EntityRef<Report_Type> _Report_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_ReportChanging(string value);
    partial void OnId_ReportChanged();
    partial void OnId_FlowChanging(int value);
    partial void OnId_FlowChanged();
    partial void OnThemeChanging(string value);
    partial void OnThemeChanged();
    partial void OnGeneral_field_1Changing(System.Nullable<decimal> value);
    partial void OnGeneral_field_1Changed();
    partial void OnGeneral_field_2Changing(System.Nullable<decimal> value);
    partial void OnGeneral_field_2Changed();
    #endregion
		
		public Report_Data()
		{
			this._Report_f262 = new EntitySet<Report_f262>(new Action<Report_f262>(this.attach_Report_f262), new Action<Report_f262>(this.detach_Report_f262));
			this._Report262_Table3 = new EntitySet<Report262_Table3>(new Action<Report262_Table3>(this.attach_Report262_Table3), new Action<Report262_Table3>(this.detach_Report262_Table3));
			this._Report_f294 = new EntitySet<Report_f294>(new Action<Report_f294>(this.attach_Report_f294), new Action<Report_f294>(this.detach_Report_f294));
			this._Report_Pg = new EntitySet<Report_Pg>(new Action<Report_Pg>(this.attach_Report_Pg), new Action<Report_Pg>(this.detach_Report_Pg));
			this._Report_InfrormationResponses = new EntitySet<Report_InfrormationResponse>(new Action<Report_InfrormationResponse>(this.attach_Report_InfrormationResponses), new Action<Report_InfrormationResponse>(this.detach_Report_InfrormationResponses));
			this._Report_Opeds = new EntitySet<Report_Oped>(new Action<Report_Oped>(this.attach_Report_Opeds), new Action<Report_Oped>(this.detach_Report_Opeds));
			this._Report_Vaccinations = new EntitySet<Report_Vaccination>(new Action<Report_Vaccination>(this.attach_Report_Vaccinations), new Action<Report_Vaccination>(this.detach_Report_Vaccinations));
			this._FSSMonitroings = new EntitySet<FSSMonitroing>(new Action<FSSMonitroing>(this.attach_FSSMonitroings), new Action<FSSMonitroing>(this.detach_FSSMonitroings));
			this._Report_Proposals = new EntitySet<Report_Proposal>(new Action<Report_Proposal>(this.attach_Report_Proposals), new Action<Report_Proposal>(this.detach_Report_Proposals));
			this._Report_OpedFinances = new EntitySet<Report_OpedFinance>(new Action<Report_OpedFinance>(this.attach_Report_OpedFinances), new Action<Report_OpedFinance>(this.detach_Report_OpedFinances));
			this._Report_Iilzs = new EntitySet<Report_Iilz>(new Action<Report_Iilz>(this.attach_Report_Iilzs), new Action<Report_Iilz>(this.detach_Report_Iilzs));
			this._Report_Flow = default(EntityRef<Report_Flow>);
			this._Report_Type = default(EntityRef<Report_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Id_Report
		{
			get
			{
				return this._Id_Report;
			}
			set
			{
				if ((this._Id_Report != value))
				{
					if (this._Report_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ReportChanging(value);
					this.SendPropertyChanging();
					this._Id_Report = value;
					this.SendPropertyChanged("Id_Report");
					this.OnId_ReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Flow", DbType="Int NOT NULL")]
		public int Id_Flow
		{
			get
			{
				return this._Id_Flow;
			}
			set
			{
				if ((this._Id_Flow != value))
				{
					if (this._Report_Flow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_FlowChanging(value);
					this.SendPropertyChanging();
					this._Id_Flow = value;
					this.SendPropertyChanged("Id_Flow");
					this.OnId_FlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Theme", DbType="VarChar(50)")]
		public string Theme
		{
			get
			{
				return this._Theme;
			}
			set
			{
				if ((this._Theme != value))
				{
					this.OnThemeChanging(value);
					this.SendPropertyChanging();
					this._Theme = value;
					this.SendPropertyChanged("Theme");
					this.OnThemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_General_field_1", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> General_field_1
		{
			get
			{
				return this._General_field_1;
			}
			set
			{
				if ((this._General_field_1 != value))
				{
					this.OnGeneral_field_1Changing(value);
					this.SendPropertyChanging();
					this._General_field_1 = value;
					this.SendPropertyChanged("General_field_1");
					this.OnGeneral_field_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_General_field_2", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> General_field_2
		{
			get
			{
				return this._General_field_2;
			}
			set
			{
				if ((this._General_field_2 != value))
				{
					this.OnGeneral_field_2Changing(value);
					this.SendPropertyChanging();
					this._General_field_2 = value;
					this.SendPropertyChanged("General_field_2");
					this.OnGeneral_field_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_f262", Storage="_Report_f262", ThisKey="Id", OtherKey="Id_Report_Data")]
		public EntitySet<Report_f262> Report_f262
		{
			get
			{
				return this._Report_f262;
			}
			set
			{
				this._Report_f262.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report262_Table3", Storage="_Report262_Table3", ThisKey="Id", OtherKey="Id_Report_Data")]
		public EntitySet<Report262_Table3> Report262_Table3
		{
			get
			{
				return this._Report262_Table3;
			}
			set
			{
				this._Report262_Table3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_f294", Storage="_Report_f294", ThisKey="Id", OtherKey="Id_Report_Data")]
		public EntitySet<Report_f294> Report_f294
		{
			get
			{
				return this._Report_f294;
			}
			set
			{
				this._Report_f294.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Pg", Storage="_Report_Pg", ThisKey="Id", OtherKey="Id_Report_Data")]
		public EntitySet<Report_Pg> Report_Pg
		{
			get
			{
				return this._Report_Pg;
			}
			set
			{
				this._Report_Pg.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_InfrormationResponse", Storage="_Report_InfrormationResponses", ThisKey="Id", OtherKey="Id_Report_Data")]
		public EntitySet<Report_InfrormationResponse> Report_InfrormationResponses
		{
			get
			{
				return this._Report_InfrormationResponses;
			}
			set
			{
				this._Report_InfrormationResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Oped", Storage="_Report_Opeds", ThisKey="Id", OtherKey="Id_Report_Data")]
		public EntitySet<Report_Oped> Report_Opeds
		{
			get
			{
				return this._Report_Opeds;
			}
			set
			{
				this._Report_Opeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Vaccination", Storage="_Report_Vaccinations", ThisKey="Id", OtherKey="Id_Report_data")]
		public EntitySet<Report_Vaccination> Report_Vaccinations
		{
			get
			{
				return this._Report_Vaccinations;
			}
			set
			{
				this._Report_Vaccinations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_FSSMonitroing", Storage="_FSSMonitroings", ThisKey="Id", OtherKey="Id_ReportData")]
		public EntitySet<FSSMonitroing> FSSMonitroings
		{
			get
			{
				return this._FSSMonitroings;
			}
			set
			{
				this._FSSMonitroings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Proposal", Storage="_Report_Proposals", ThisKey="Id", OtherKey="id_ReportData")]
		public EntitySet<Report_Proposal> Report_Proposals
		{
			get
			{
				return this._Report_Proposals;
			}
			set
			{
				this._Report_Proposals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_OpedFinance", Storage="_Report_OpedFinances", ThisKey="Id", OtherKey="id_ReportData")]
		public EntitySet<Report_OpedFinance> Report_OpedFinances
		{
			get
			{
				return this._Report_OpedFinances;
			}
			set
			{
				this._Report_OpedFinances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Iilz", Storage="_Report_Iilzs", ThisKey="Id", OtherKey="Id_Report_Data")]
		public EntitySet<Report_Iilz> Report_Iilzs
		{
			get
			{
				return this._Report_Iilzs;
			}
			set
			{
				this._Report_Iilzs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Flow_Report_Data", Storage="_Report_Flow", ThisKey="Id_Flow", OtherKey="Id", IsForeignKey=true)]
		public Report_Flow Report_Flow
		{
			get
			{
				return this._Report_Flow.Entity;
			}
			set
			{
				Report_Flow previousValue = this._Report_Flow.Entity;
				if (((previousValue != value) 
							|| (this._Report_Flow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Flow.Entity = null;
						previousValue.Report_Data.Remove(this);
					}
					this._Report_Flow.Entity = value;
					if ((value != null))
					{
						value.Report_Data.Add(this);
						this._Id_Flow = value.Id;
					}
					else
					{
						this._Id_Flow = default(int);
					}
					this.SendPropertyChanged("Report_Flow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Type_Report_Data", Storage="_Report_Type", ThisKey="Id_Report", OtherKey="Id", IsForeignKey=true)]
		public Report_Type Report_Type
		{
			get
			{
				return this._Report_Type.Entity;
			}
			set
			{
				Report_Type previousValue = this._Report_Type.Entity;
				if (((previousValue != value) 
							|| (this._Report_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Type.Entity = null;
						previousValue.Report_Datas.Remove(this);
					}
					this._Report_Type.Entity = value;
					if ((value != null))
					{
						value.Report_Datas.Add(this);
						this._Id_Report = value.Id;
					}
					else
					{
						this._Id_Report = default(string);
					}
					this.SendPropertyChanged("Report_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report_f262(Report_f262 entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_f262(Report_f262 entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report262_Table3(Report262_Table3 entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report262_Table3(Report262_Table3 entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_f294(Report_f294 entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_f294(Report_f294 entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_Pg(Report_Pg entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_Pg(Report_Pg entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_InfrormationResponses(Report_InfrormationResponse entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_InfrormationResponses(Report_InfrormationResponse entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_Opeds(Report_Oped entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_Opeds(Report_Oped entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_Vaccinations(Report_Vaccination entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_Vaccinations(Report_Vaccination entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_FSSMonitroings(FSSMonitroing entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_FSSMonitroings(FSSMonitroing entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_Proposals(Report_Proposal entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_Proposals(Report_Proposal entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_OpedFinances(Report_OpedFinance entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_OpedFinances(Report_OpedFinance entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
		
		private void attach_Report_Iilzs(Report_Iilz entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = this;
		}
		
		private void detach_Report_Iilzs(Report_Iilz entity)
		{
			this.SendPropertyChanging();
			entity.Report_Data = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_f262")]
	public partial class Report_f262 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Report_Data;
		
		private System.Nullable<int> _Row_Num;
		
		private System.Nullable<int> _Count_Ppl;
		
		private System.Nullable<int> _Count_Ppl_Full;
		
		private System.Nullable<int> _Count_Sms;
		
		private System.Nullable<int> _Count_Post;
		
		private System.Nullable<int> _Count_Phone;
		
		private System.Nullable<int> _Count_Messangers;
		
		private System.Nullable<int> _Count_Email;
		
		private System.Nullable<int> _Count_Address;
		
		private System.Nullable<int> _Count_Another;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_Report_DataChanging(int value);
    partial void OnId_Report_DataChanged();
    partial void OnRow_NumChanging(System.Nullable<int> value);
    partial void OnRow_NumChanged();
    partial void OnCount_PplChanging(System.Nullable<int> value);
    partial void OnCount_PplChanged();
    partial void OnCount_Ppl_FullChanging(System.Nullable<int> value);
    partial void OnCount_Ppl_FullChanged();
    partial void OnCount_SmsChanging(System.Nullable<int> value);
    partial void OnCount_SmsChanged();
    partial void OnCount_PostChanging(System.Nullable<int> value);
    partial void OnCount_PostChanged();
    partial void OnCount_PhoneChanging(System.Nullable<int> value);
    partial void OnCount_PhoneChanged();
    partial void OnCount_MessangersChanging(System.Nullable<int> value);
    partial void OnCount_MessangersChanged();
    partial void OnCount_EmailChanging(System.Nullable<int> value);
    partial void OnCount_EmailChanged();
    partial void OnCount_AddressChanging(System.Nullable<int> value);
    partial void OnCount_AddressChanged();
    partial void OnCount_AnotherChanging(System.Nullable<int> value);
    partial void OnCount_AnotherChanged();
    #endregion
		
		public Report_f262()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Data", DbType="Int NOT NULL")]
		public int Id_Report_Data
		{
			get
			{
				return this._Id_Report_Data;
			}
			set
			{
				if ((this._Id_Report_Data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Data = value;
					this.SendPropertyChanged("Id_Report_Data");
					this.OnId_Report_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row_Num", DbType="Int")]
		public System.Nullable<int> Row_Num
		{
			get
			{
				return this._Row_Num;
			}
			set
			{
				if ((this._Row_Num != value))
				{
					this.OnRow_NumChanging(value);
					this.SendPropertyChanging();
					this._Row_Num = value;
					this.SendPropertyChanged("Row_Num");
					this.OnRow_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Ppl", DbType="Int")]
		public System.Nullable<int> Count_Ppl
		{
			get
			{
				return this._Count_Ppl;
			}
			set
			{
				if ((this._Count_Ppl != value))
				{
					this.OnCount_PplChanging(value);
					this.SendPropertyChanging();
					this._Count_Ppl = value;
					this.SendPropertyChanged("Count_Ppl");
					this.OnCount_PplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Ppl_Full", DbType="Int")]
		public System.Nullable<int> Count_Ppl_Full
		{
			get
			{
				return this._Count_Ppl_Full;
			}
			set
			{
				if ((this._Count_Ppl_Full != value))
				{
					this.OnCount_Ppl_FullChanging(value);
					this.SendPropertyChanging();
					this._Count_Ppl_Full = value;
					this.SendPropertyChanged("Count_Ppl_Full");
					this.OnCount_Ppl_FullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Sms", DbType="Int")]
		public System.Nullable<int> Count_Sms
		{
			get
			{
				return this._Count_Sms;
			}
			set
			{
				if ((this._Count_Sms != value))
				{
					this.OnCount_SmsChanging(value);
					this.SendPropertyChanging();
					this._Count_Sms = value;
					this.SendPropertyChanged("Count_Sms");
					this.OnCount_SmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Post", DbType="Int")]
		public System.Nullable<int> Count_Post
		{
			get
			{
				return this._Count_Post;
			}
			set
			{
				if ((this._Count_Post != value))
				{
					this.OnCount_PostChanging(value);
					this.SendPropertyChanging();
					this._Count_Post = value;
					this.SendPropertyChanged("Count_Post");
					this.OnCount_PostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Phone", DbType="Int")]
		public System.Nullable<int> Count_Phone
		{
			get
			{
				return this._Count_Phone;
			}
			set
			{
				if ((this._Count_Phone != value))
				{
					this.OnCount_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Count_Phone = value;
					this.SendPropertyChanged("Count_Phone");
					this.OnCount_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Messangers", DbType="Int")]
		public System.Nullable<int> Count_Messangers
		{
			get
			{
				return this._Count_Messangers;
			}
			set
			{
				if ((this._Count_Messangers != value))
				{
					this.OnCount_MessangersChanging(value);
					this.SendPropertyChanging();
					this._Count_Messangers = value;
					this.SendPropertyChanged("Count_Messangers");
					this.OnCount_MessangersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Email", DbType="Int")]
		public System.Nullable<int> Count_Email
		{
			get
			{
				return this._Count_Email;
			}
			set
			{
				if ((this._Count_Email != value))
				{
					this.OnCount_EmailChanging(value);
					this.SendPropertyChanging();
					this._Count_Email = value;
					this.SendPropertyChanged("Count_Email");
					this.OnCount_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Address", DbType="Int")]
		public System.Nullable<int> Count_Address
		{
			get
			{
				return this._Count_Address;
			}
			set
			{
				if ((this._Count_Address != value))
				{
					this.OnCount_AddressChanging(value);
					this.SendPropertyChanging();
					this._Count_Address = value;
					this.SendPropertyChanged("Count_Address");
					this.OnCount_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Another", DbType="Int")]
		public System.Nullable<int> Count_Another
		{
			get
			{
				return this._Count_Another;
			}
			set
			{
				if ((this._Count_Another != value))
				{
					this.OnCount_AnotherChanging(value);
					this.SendPropertyChanging();
					this._Count_Another = value;
					this.SendPropertyChanged("Count_Another");
					this.OnCount_AnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_f262", Storage="_Report_Data", ThisKey="Id_Report_Data", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_f262.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_f262.Add(this);
						this._Id_Report_Data = value.Id;
					}
					else
					{
						this._Id_Report_Data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report262_Table3")]
	public partial class Report262_Table3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _Id_Report_Data;
		
		private string _mo;
		
		private System.Nullable<int> _count_unit;
		
		private System.Nullable<int> _count_unit_child;
		
		private System.Nullable<int> _count_unit_with_sp;
		
		private System.Nullable<int> _count_unit_with_sp_child;
		
		private System.Nullable<int> _count_channel_sp;
		
		private System.Nullable<int> _count_channel_sp_child;
		
		private System.Nullable<int> _count_channel_phone;
		
		private System.Nullable<int> _count_channel_phone_child;
		
		private System.Nullable<int> _count_channel_terminal;
		
		private System.Nullable<int> _count_channel_terminal_child;
		
		private System.Nullable<int> _count_channel_another;
		
		private System.Nullable<int> _count_channel_another_child;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnId_Report_DataChanging(int value);
    partial void OnId_Report_DataChanged();
    partial void OnmoChanging(string value);
    partial void OnmoChanged();
    partial void Oncount_unitChanging(System.Nullable<int> value);
    partial void Oncount_unitChanged();
    partial void Oncount_unit_childChanging(System.Nullable<int> value);
    partial void Oncount_unit_childChanged();
    partial void Oncount_unit_with_spChanging(System.Nullable<int> value);
    partial void Oncount_unit_with_spChanged();
    partial void Oncount_unit_with_sp_childChanging(System.Nullable<int> value);
    partial void Oncount_unit_with_sp_childChanged();
    partial void Oncount_channel_spChanging(System.Nullable<int> value);
    partial void Oncount_channel_spChanged();
    partial void Oncount_channel_sp_childChanging(System.Nullable<int> value);
    partial void Oncount_channel_sp_childChanged();
    partial void Oncount_channel_phoneChanging(System.Nullable<int> value);
    partial void Oncount_channel_phoneChanged();
    partial void Oncount_channel_phone_childChanging(System.Nullable<int> value);
    partial void Oncount_channel_phone_childChanged();
    partial void Oncount_channel_terminalChanging(System.Nullable<int> value);
    partial void Oncount_channel_terminalChanged();
    partial void Oncount_channel_terminal_childChanging(System.Nullable<int> value);
    partial void Oncount_channel_terminal_childChanged();
    partial void Oncount_channel_anotherChanging(System.Nullable<int> value);
    partial void Oncount_channel_anotherChanged();
    partial void Oncount_channel_another_childChanging(System.Nullable<int> value);
    partial void Oncount_channel_another_childChanged();
    #endregion
		
		public Report262_Table3()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Data", DbType="Int NOT NULL")]
		public int Id_Report_Data
		{
			get
			{
				return this._Id_Report_Data;
			}
			set
			{
				if ((this._Id_Report_Data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Data = value;
					this.SendPropertyChanged("Id_Report_Data");
					this.OnId_Report_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string mo
		{
			get
			{
				return this._mo;
			}
			set
			{
				if ((this._mo != value))
				{
					this.OnmoChanging(value);
					this.SendPropertyChanging();
					this._mo = value;
					this.SendPropertyChanged("mo");
					this.OnmoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_unit", DbType="Int")]
		public System.Nullable<int> count_unit
		{
			get
			{
				return this._count_unit;
			}
			set
			{
				if ((this._count_unit != value))
				{
					this.Oncount_unitChanging(value);
					this.SendPropertyChanging();
					this._count_unit = value;
					this.SendPropertyChanged("count_unit");
					this.Oncount_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_unit_child", DbType="Int")]
		public System.Nullable<int> count_unit_child
		{
			get
			{
				return this._count_unit_child;
			}
			set
			{
				if ((this._count_unit_child != value))
				{
					this.Oncount_unit_childChanging(value);
					this.SendPropertyChanging();
					this._count_unit_child = value;
					this.SendPropertyChanged("count_unit_child");
					this.Oncount_unit_childChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_unit_with_sp", DbType="Int")]
		public System.Nullable<int> count_unit_with_sp
		{
			get
			{
				return this._count_unit_with_sp;
			}
			set
			{
				if ((this._count_unit_with_sp != value))
				{
					this.Oncount_unit_with_spChanging(value);
					this.SendPropertyChanging();
					this._count_unit_with_sp = value;
					this.SendPropertyChanged("count_unit_with_sp");
					this.Oncount_unit_with_spChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_unit_with_sp_child", DbType="Int")]
		public System.Nullable<int> count_unit_with_sp_child
		{
			get
			{
				return this._count_unit_with_sp_child;
			}
			set
			{
				if ((this._count_unit_with_sp_child != value))
				{
					this.Oncount_unit_with_sp_childChanging(value);
					this.SendPropertyChanging();
					this._count_unit_with_sp_child = value;
					this.SendPropertyChanged("count_unit_with_sp_child");
					this.Oncount_unit_with_sp_childChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_sp", DbType="Int")]
		public System.Nullable<int> count_channel_sp
		{
			get
			{
				return this._count_channel_sp;
			}
			set
			{
				if ((this._count_channel_sp != value))
				{
					this.Oncount_channel_spChanging(value);
					this.SendPropertyChanging();
					this._count_channel_sp = value;
					this.SendPropertyChanged("count_channel_sp");
					this.Oncount_channel_spChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_sp_child", DbType="Int")]
		public System.Nullable<int> count_channel_sp_child
		{
			get
			{
				return this._count_channel_sp_child;
			}
			set
			{
				if ((this._count_channel_sp_child != value))
				{
					this.Oncount_channel_sp_childChanging(value);
					this.SendPropertyChanging();
					this._count_channel_sp_child = value;
					this.SendPropertyChanged("count_channel_sp_child");
					this.Oncount_channel_sp_childChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_phone", DbType="Int")]
		public System.Nullable<int> count_channel_phone
		{
			get
			{
				return this._count_channel_phone;
			}
			set
			{
				if ((this._count_channel_phone != value))
				{
					this.Oncount_channel_phoneChanging(value);
					this.SendPropertyChanging();
					this._count_channel_phone = value;
					this.SendPropertyChanged("count_channel_phone");
					this.Oncount_channel_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_phone_child", DbType="Int")]
		public System.Nullable<int> count_channel_phone_child
		{
			get
			{
				return this._count_channel_phone_child;
			}
			set
			{
				if ((this._count_channel_phone_child != value))
				{
					this.Oncount_channel_phone_childChanging(value);
					this.SendPropertyChanging();
					this._count_channel_phone_child = value;
					this.SendPropertyChanged("count_channel_phone_child");
					this.Oncount_channel_phone_childChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_terminal", DbType="Int")]
		public System.Nullable<int> count_channel_terminal
		{
			get
			{
				return this._count_channel_terminal;
			}
			set
			{
				if ((this._count_channel_terminal != value))
				{
					this.Oncount_channel_terminalChanging(value);
					this.SendPropertyChanging();
					this._count_channel_terminal = value;
					this.SendPropertyChanged("count_channel_terminal");
					this.Oncount_channel_terminalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_terminal_child", DbType="Int")]
		public System.Nullable<int> count_channel_terminal_child
		{
			get
			{
				return this._count_channel_terminal_child;
			}
			set
			{
				if ((this._count_channel_terminal_child != value))
				{
					this.Oncount_channel_terminal_childChanging(value);
					this.SendPropertyChanging();
					this._count_channel_terminal_child = value;
					this.SendPropertyChanged("count_channel_terminal_child");
					this.Oncount_channel_terminal_childChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_another", DbType="Int")]
		public System.Nullable<int> count_channel_another
		{
			get
			{
				return this._count_channel_another;
			}
			set
			{
				if ((this._count_channel_another != value))
				{
					this.Oncount_channel_anotherChanging(value);
					this.SendPropertyChanging();
					this._count_channel_another = value;
					this.SendPropertyChanged("count_channel_another");
					this.Oncount_channel_anotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_channel_another_child", DbType="Int")]
		public System.Nullable<int> count_channel_another_child
		{
			get
			{
				return this._count_channel_another_child;
			}
			set
			{
				if ((this._count_channel_another_child != value))
				{
					this.Oncount_channel_another_childChanging(value);
					this.SendPropertyChanging();
					this._count_channel_another_child = value;
					this.SendPropertyChanged("count_channel_another_child");
					this.Oncount_channel_another_childChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report262_Table3", Storage="_Report_Data", ThisKey="Id_Report_Data", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report262_Table3.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report262_Table3.Add(this);
						this._Id_Report_Data = value.Id;
					}
					else
					{
						this._Id_Report_Data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_f294")]
	public partial class Report_f294 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Report_Data;
		
		private string _RowNum;
		
		private System.Nullable<int> _CountPpl;
		
		private System.Nullable<int> _CountSms;
		
		private System.Nullable<int> _CountPost;
		
		private System.Nullable<int> _CountPhone;
		
		private System.Nullable<int> _CountMessangers;
		
		private System.Nullable<int> _CountEmail;
		
		private System.Nullable<int> _CountAddress;
		
		private System.Nullable<int> _CountAnother;
		
		private System.Nullable<int> _CountOncologicalDisease;
		
		private System.Nullable<int> _CountEndocrineDisease;
		
		private System.Nullable<int> _CountBronchoDisease;
		
		private System.Nullable<int> _CountBloodDisease;
		
		private System.Nullable<int> _CountAnotherDisease;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_Report_DataChanging(int value);
    partial void OnId_Report_DataChanged();
    partial void OnRowNumChanging(string value);
    partial void OnRowNumChanged();
    partial void OnCountPplChanging(System.Nullable<int> value);
    partial void OnCountPplChanged();
    partial void OnCountSmsChanging(System.Nullable<int> value);
    partial void OnCountSmsChanged();
    partial void OnCountPostChanging(System.Nullable<int> value);
    partial void OnCountPostChanged();
    partial void OnCountPhoneChanging(System.Nullable<int> value);
    partial void OnCountPhoneChanged();
    partial void OnCountMessangersChanging(System.Nullable<int> value);
    partial void OnCountMessangersChanged();
    partial void OnCountEmailChanging(System.Nullable<int> value);
    partial void OnCountEmailChanged();
    partial void OnCountAddressChanging(System.Nullable<int> value);
    partial void OnCountAddressChanged();
    partial void OnCountAnotherChanging(System.Nullable<int> value);
    partial void OnCountAnotherChanged();
    partial void OnCountOncologicalDiseaseChanging(System.Nullable<int> value);
    partial void OnCountOncologicalDiseaseChanged();
    partial void OnCountEndocrineDiseaseChanging(System.Nullable<int> value);
    partial void OnCountEndocrineDiseaseChanged();
    partial void OnCountBronchoDiseaseChanging(System.Nullable<int> value);
    partial void OnCountBronchoDiseaseChanged();
    partial void OnCountBloodDiseaseChanging(System.Nullable<int> value);
    partial void OnCountBloodDiseaseChanged();
    partial void OnCountAnotherDiseaseChanging(System.Nullable<int> value);
    partial void OnCountAnotherDiseaseChanged();
    #endregion
		
		public Report_f294()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Data", DbType="Int NOT NULL")]
		public int Id_Report_Data
		{
			get
			{
				return this._Id_Report_Data;
			}
			set
			{
				if ((this._Id_Report_Data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Data = value;
					this.SendPropertyChanged("Id_Report_Data");
					this.OnId_Report_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this.OnRowNumChanging(value);
					this.SendPropertyChanging();
					this._RowNum = value;
					this.SendPropertyChanged("RowNum");
					this.OnRowNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountPpl", DbType="Int")]
		public System.Nullable<int> CountPpl
		{
			get
			{
				return this._CountPpl;
			}
			set
			{
				if ((this._CountPpl != value))
				{
					this.OnCountPplChanging(value);
					this.SendPropertyChanging();
					this._CountPpl = value;
					this.SendPropertyChanged("CountPpl");
					this.OnCountPplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountSms", DbType="Int")]
		public System.Nullable<int> CountSms
		{
			get
			{
				return this._CountSms;
			}
			set
			{
				if ((this._CountSms != value))
				{
					this.OnCountSmsChanging(value);
					this.SendPropertyChanging();
					this._CountSms = value;
					this.SendPropertyChanged("CountSms");
					this.OnCountSmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountPost", DbType="Int")]
		public System.Nullable<int> CountPost
		{
			get
			{
				return this._CountPost;
			}
			set
			{
				if ((this._CountPost != value))
				{
					this.OnCountPostChanging(value);
					this.SendPropertyChanging();
					this._CountPost = value;
					this.SendPropertyChanged("CountPost");
					this.OnCountPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountPhone", DbType="Int")]
		public System.Nullable<int> CountPhone
		{
			get
			{
				return this._CountPhone;
			}
			set
			{
				if ((this._CountPhone != value))
				{
					this.OnCountPhoneChanging(value);
					this.SendPropertyChanging();
					this._CountPhone = value;
					this.SendPropertyChanged("CountPhone");
					this.OnCountPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountMessangers", DbType="Int")]
		public System.Nullable<int> CountMessangers
		{
			get
			{
				return this._CountMessangers;
			}
			set
			{
				if ((this._CountMessangers != value))
				{
					this.OnCountMessangersChanging(value);
					this.SendPropertyChanging();
					this._CountMessangers = value;
					this.SendPropertyChanged("CountMessangers");
					this.OnCountMessangersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountEmail", DbType="Int")]
		public System.Nullable<int> CountEmail
		{
			get
			{
				return this._CountEmail;
			}
			set
			{
				if ((this._CountEmail != value))
				{
					this.OnCountEmailChanging(value);
					this.SendPropertyChanging();
					this._CountEmail = value;
					this.SendPropertyChanged("CountEmail");
					this.OnCountEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountAddress", DbType="Int")]
		public System.Nullable<int> CountAddress
		{
			get
			{
				return this._CountAddress;
			}
			set
			{
				if ((this._CountAddress != value))
				{
					this.OnCountAddressChanging(value);
					this.SendPropertyChanging();
					this._CountAddress = value;
					this.SendPropertyChanged("CountAddress");
					this.OnCountAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountAnother", DbType="Int")]
		public System.Nullable<int> CountAnother
		{
			get
			{
				return this._CountAnother;
			}
			set
			{
				if ((this._CountAnother != value))
				{
					this.OnCountAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountAnother = value;
					this.SendPropertyChanged("CountAnother");
					this.OnCountAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOncologicalDisease", DbType="Int")]
		public System.Nullable<int> CountOncologicalDisease
		{
			get
			{
				return this._CountOncologicalDisease;
			}
			set
			{
				if ((this._CountOncologicalDisease != value))
				{
					this.OnCountOncologicalDiseaseChanging(value);
					this.SendPropertyChanging();
					this._CountOncologicalDisease = value;
					this.SendPropertyChanged("CountOncologicalDisease");
					this.OnCountOncologicalDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountEndocrineDisease", DbType="Int")]
		public System.Nullable<int> CountEndocrineDisease
		{
			get
			{
				return this._CountEndocrineDisease;
			}
			set
			{
				if ((this._CountEndocrineDisease != value))
				{
					this.OnCountEndocrineDiseaseChanging(value);
					this.SendPropertyChanging();
					this._CountEndocrineDisease = value;
					this.SendPropertyChanged("CountEndocrineDisease");
					this.OnCountEndocrineDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountBronchoDisease", DbType="Int")]
		public System.Nullable<int> CountBronchoDisease
		{
			get
			{
				return this._CountBronchoDisease;
			}
			set
			{
				if ((this._CountBronchoDisease != value))
				{
					this.OnCountBronchoDiseaseChanging(value);
					this.SendPropertyChanging();
					this._CountBronchoDisease = value;
					this.SendPropertyChanged("CountBronchoDisease");
					this.OnCountBronchoDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountBloodDisease", DbType="Int")]
		public System.Nullable<int> CountBloodDisease
		{
			get
			{
				return this._CountBloodDisease;
			}
			set
			{
				if ((this._CountBloodDisease != value))
				{
					this.OnCountBloodDiseaseChanging(value);
					this.SendPropertyChanging();
					this._CountBloodDisease = value;
					this.SendPropertyChanged("CountBloodDisease");
					this.OnCountBloodDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountAnotherDisease", DbType="Int")]
		public System.Nullable<int> CountAnotherDisease
		{
			get
			{
				return this._CountAnotherDisease;
			}
			set
			{
				if ((this._CountAnotherDisease != value))
				{
					this.OnCountAnotherDiseaseChanging(value);
					this.SendPropertyChanging();
					this._CountAnotherDisease = value;
					this.SendPropertyChanged("CountAnotherDisease");
					this.OnCountAnotherDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_f294", Storage="_Report_Data", ThisKey="Id_Report_Data", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_f294.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_f294.Add(this);
						this._Id_Report_Data = value.Id;
					}
					else
					{
						this._Id_Report_Data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _code_division;
		
		private string _name_devision;
		
		private string _position;
		
		private string _name_head;
		
		private string _phone;
		
		private EntitySet<Employee> _Employee;
		
		private EntitySet<Report_Dynamic_Flow> _Report_Dynamic_Flow;
		
		private EntitySet<OpedFinancePlan> _OpedFinancePlans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncode_divisionChanging(string value);
    partial void Oncode_divisionChanged();
    partial void Onname_devisionChanging(string value);
    partial void Onname_devisionChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void Onname_headChanging(string value);
    partial void Onname_headChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Region()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			this._Report_Dynamic_Flow = new EntitySet<Report_Dynamic_Flow>(new Action<Report_Dynamic_Flow>(this.attach_Report_Dynamic_Flow), new Action<Report_Dynamic_Flow>(this.detach_Report_Dynamic_Flow));
			this._OpedFinancePlans = new EntitySet<OpedFinancePlan>(new Action<OpedFinancePlan>(this.attach_OpedFinancePlans), new Action<OpedFinancePlan>(this.detach_OpedFinancePlans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_division", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code_division
		{
			get
			{
				return this._code_division;
			}
			set
			{
				if ((this._code_division != value))
				{
					this.Oncode_divisionChanging(value);
					this.SendPropertyChanging();
					this._code_division = value;
					this.SendPropertyChanged("code_division");
					this.Oncode_divisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_devision", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name_devision
		{
			get
			{
				return this._name_devision;
			}
			set
			{
				if ((this._name_devision != value))
				{
					this.Onname_devisionChanging(value);
					this.SendPropertyChanging();
					this._name_devision = value;
					this.SendPropertyChanged("name_devision");
					this.Onname_devisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_head", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name_head
		{
			get
			{
				return this._name_head;
			}
			set
			{
				if ((this._name_head != value))
				{
					this.Onname_headChanging(value);
					this.SendPropertyChanging();
					this._name_head = value;
					this.SendPropertyChanged("name_head");
					this.Onname_headChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Employee", Storage="_Employee", ThisKey="id", OtherKey="Region")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Report_Dynamic_Flow", Storage="_Report_Dynamic_Flow", ThisKey="id", OtherKey="Id_Region")]
		public EntitySet<Report_Dynamic_Flow> Report_Dynamic_Flow
		{
			get
			{
				return this._Report_Dynamic_Flow;
			}
			set
			{
				this._Report_Dynamic_Flow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_OpedFinancePlan", Storage="_OpedFinancePlans", ThisKey="id", OtherKey="Id_Region")]
		public EntitySet<OpedFinancePlan> OpedFinancePlans
		{
			get
			{
				return this._OpedFinancePlans;
			}
			set
			{
				this._OpedFinancePlans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Region1 = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Region1 = null;
		}
		
		private void attach_Report_Dynamic_Flow(Report_Dynamic_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Report_Dynamic_Flow(Report_Dynamic_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void attach_OpedFinancePlans(OpedFinancePlan entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_OpedFinancePlans(OpedFinancePlan entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Surname;
		
		private string _Name;
		
		private string _MiddleName;
		
		private string _Login;
		
		private string _Password;
		
		private string _Phone;
		
		private string _Position;
		
		private string _Email;
		
		private string _Region;
		
		private bool _IsActive;
		
		private EntitySet<Responsible_Employee> _Responsible_Employee;
		
		private EntitySet<Comment> _Comment;
		
		private EntitySet<Report_Dynamic_Flow> _Report_Dynamic_Flow;
		
		private EntityRef<Report_Dynamic> _Report_Dynamic;
		
		private EntitySet<Report_Flow> _Report_Flow;
		
		private EntitySet<Scans_Base> _Scans_Bases;
		
		private EntitySet<Scans_Base> _Scans_Bases1;
		
		private EntityRef<Region> _Region1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Employee()
		{
			this._Responsible_Employee = new EntitySet<Responsible_Employee>(new Action<Responsible_Employee>(this.attach_Responsible_Employee), new Action<Responsible_Employee>(this.detach_Responsible_Employee));
			this._Comment = new EntitySet<Comment>(new Action<Comment>(this.attach_Comment), new Action<Comment>(this.detach_Comment));
			this._Report_Dynamic_Flow = new EntitySet<Report_Dynamic_Flow>(new Action<Report_Dynamic_Flow>(this.attach_Report_Dynamic_Flow), new Action<Report_Dynamic_Flow>(this.detach_Report_Dynamic_Flow));
			this._Report_Dynamic = default(EntityRef<Report_Dynamic>);
			this._Report_Flow = new EntitySet<Report_Flow>(new Action<Report_Flow>(this.attach_Report_Flow), new Action<Report_Flow>(this.detach_Report_Flow));
			this._Scans_Bases = new EntitySet<Scans_Base>(new Action<Scans_Base>(this.attach_Scans_Bases), new Action<Scans_Base>(this.detach_Scans_Bases));
			this._Scans_Bases1 = new EntitySet<Scans_Base>(new Action<Scans_Base>(this.attach_Scans_Bases1), new Action<Scans_Base>(this.detach_Scans_Bases1));
			this._Region1 = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(100)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					if (this._Region1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Responsible_Employee", Storage="_Responsible_Employee", ThisKey="Id", OtherKey="Id_Employee")]
		public EntitySet<Responsible_Employee> Responsible_Employee
		{
			get
			{
				return this._Responsible_Employee;
			}
			set
			{
				this._Responsible_Employee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Comment", Storage="_Comment", ThisKey="Id", OtherKey="Id_Employee")]
		public EntitySet<Comment> Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				this._Comment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report_Dynamic_Flow", Storage="_Report_Dynamic_Flow", ThisKey="Id", OtherKey="Id_Employee")]
		public EntitySet<Report_Dynamic_Flow> Report_Dynamic_Flow
		{
			get
			{
				return this._Report_Dynamic_Flow;
			}
			set
			{
				this._Report_Dynamic_Flow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report_Dynamic", Storage="_Report_Dynamic", ThisKey="Id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Report_Dynamic Report_Dynamic
		{
			get
			{
				return this._Report_Dynamic.Entity;
			}
			set
			{
				Report_Dynamic previousValue = this._Report_Dynamic.Entity;
				if (((previousValue != value) 
							|| (this._Report_Dynamic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Dynamic.Entity = null;
						previousValue.Employee = null;
					}
					this._Report_Dynamic.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("Report_Dynamic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report_Flow", Storage="_Report_Flow", ThisKey="Id", OtherKey="Id_Employee")]
		public EntitySet<Report_Flow> Report_Flow
		{
			get
			{
				return this._Report_Flow;
			}
			set
			{
				this._Report_Flow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Scans_Base", Storage="_Scans_Bases", ThisKey="Id", OtherKey="Usr_added")]
		public EntitySet<Scans_Base> Scans_Bases
		{
			get
			{
				return this._Scans_Bases;
			}
			set
			{
				this._Scans_Bases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Scans_Base1", Storage="_Scans_Bases1", ThisKey="Id", OtherKey="Usr_update")]
		public EntitySet<Scans_Base> Scans_Bases1
		{
			get
			{
				return this._Scans_Bases1;
			}
			set
			{
				this._Scans_Bases1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Employee", Storage="_Region1", ThisKey="Region", OtherKey="id", IsForeignKey=true)]
		public Region Region1
		{
			get
			{
				return this._Region1.Entity;
			}
			set
			{
				Region previousValue = this._Region1.Entity;
				if (((previousValue != value) 
							|| (this._Region1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region1.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._Region1.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._Region = value.id;
					}
					else
					{
						this._Region = default(string);
					}
					this.SendPropertyChanged("Region1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Responsible_Employee(Responsible_Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Responsible_Employee(Responsible_Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Report_Dynamic_Flow(Report_Dynamic_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Report_Dynamic_Flow(Report_Dynamic_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Report_Flow(Report_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Report_Flow(Report_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Scans_Bases(Scans_Base entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Scans_Bases(Scans_Base entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Scans_Bases1(Scans_Base entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Scans_Bases1(Scans_Base entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _Id_Flow;
		
		private System.Nullable<int> _Id_Employee;
		
		private string _Comment1;
		
		private System.DateTime _Date_ins;
		
		private System.Nullable<System.DateTime> _Date_read;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Report_Flow> _Report_Flow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnId_FlowChanging(System.Nullable<int> value);
    partial void OnId_FlowChanged();
    partial void OnId_EmployeeChanging(System.Nullable<int> value);
    partial void OnId_EmployeeChanged();
    partial void OnComment1Changing(string value);
    partial void OnComment1Changed();
    partial void OnDate_insChanging(System.DateTime value);
    partial void OnDate_insChanged();
    partial void OnDate_readChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_readChanged();
    #endregion
		
		public Comment()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Report_Flow = default(EntityRef<Report_Flow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Flow", DbType="Int")]
		public System.Nullable<int> Id_Flow
		{
			get
			{
				return this._Id_Flow;
			}
			set
			{
				if ((this._Id_Flow != value))
				{
					if (this._Report_Flow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_FlowChanging(value);
					this.SendPropertyChanging();
					this._Id_Flow = value;
					this.SendPropertyChanged("Id_Flow");
					this.OnId_FlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Employee", DbType="Int")]
		public System.Nullable<int> Id_Employee
		{
			get
			{
				return this._Id_Employee;
			}
			set
			{
				if ((this._Id_Employee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EmployeeChanging(value);
					this.SendPropertyChanging();
					this._Id_Employee = value;
					this.SendPropertyChanged("Id_Employee");
					this.OnId_EmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Comment", Storage="_Comment1", DbType="VarChar(MAX)")]
		public string Comment1
		{
			get
			{
				return this._Comment1;
			}
			set
			{
				if ((this._Comment1 != value))
				{
					this.OnComment1Changing(value);
					this.SendPropertyChanging();
					this._Comment1 = value;
					this.SendPropertyChanged("Comment1");
					this.OnComment1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_ins", DbType="DateTime NOT NULL")]
		public System.DateTime Date_ins
		{
			get
			{
				return this._Date_ins;
			}
			set
			{
				if ((this._Date_ins != value))
				{
					this.OnDate_insChanging(value);
					this.SendPropertyChanging();
					this._Date_ins = value;
					this.SendPropertyChanged("Date_ins");
					this.OnDate_insChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_read", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_read
		{
			get
			{
				return this._Date_read;
			}
			set
			{
				if ((this._Date_read != value))
				{
					this.OnDate_readChanging(value);
					this.SendPropertyChanging();
					this._Date_read = value;
					this.SendPropertyChanged("Date_read");
					this.OnDate_readChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Comment", Storage="_Employee", ThisKey="Id_Employee", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Comment.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Comment.Add(this);
						this._Id_Employee = value.Id;
					}
					else
					{
						this._Id_Employee = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Flow_Comment", Storage="_Report_Flow", ThisKey="Id_Flow", OtherKey="Id", IsForeignKey=true)]
		public Report_Flow Report_Flow
		{
			get
			{
				return this._Report_Flow.Entity;
			}
			set
			{
				Report_Flow previousValue = this._Report_Flow.Entity;
				if (((previousValue != value) 
							|| (this._Report_Flow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Flow.Entity = null;
						previousValue.Comment.Remove(this);
					}
					this._Report_Flow.Entity = value;
					if ((value != null))
					{
						value.Comment.Add(this);
						this._Id_Flow = value.Id;
					}
					else
					{
						this._Id_Flow = default(Nullable<int>);
					}
					this.SendPropertyChanged("Report_Flow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Pg")]
	public partial class Report_Pg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Report_Data;
		
		private string _RowNum;
		
		private System.Nullable<decimal> _CountSmo;
		
		private System.Nullable<decimal> _CountSmoAnother;
		
		private System.Nullable<decimal> _CountInsured;
		
		private System.Nullable<decimal> _CountInsuredRepresentative;
		
		private System.Nullable<decimal> _CountTfoms;
		
		private System.Nullable<decimal> _CountProsecutor;
		
		private System.Nullable<decimal> _CountOutOfSmo;
		
		private System.Nullable<decimal> _CountAmbulatory;
		
		private System.Nullable<decimal> _CountDs;
		
		private System.Nullable<decimal> _CountDsVmp;
		
		private decimal _CountStac;
		
		private System.Nullable<decimal> _CountStacVmp;
		
		private System.Nullable<decimal> _CountOutOfSmoAnother;
		
		private System.Nullable<decimal> _CountAmbulatoryAnother;
		
		private System.Nullable<decimal> _CountDsAnother;
		
		private System.Nullable<decimal> _CountDsVmpAnother;
		
		private System.Nullable<decimal> _CountStacAnother;
		
		private System.Nullable<decimal> _CountStacVmpAnother;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_Report_DataChanging(int value);
    partial void OnId_Report_DataChanged();
    partial void OnRowNumChanging(string value);
    partial void OnRowNumChanged();
    partial void OnCountSmoChanging(System.Nullable<decimal> value);
    partial void OnCountSmoChanged();
    partial void OnCountSmoAnotherChanging(System.Nullable<decimal> value);
    partial void OnCountSmoAnotherChanged();
    partial void OnCountInsuredChanging(System.Nullable<decimal> value);
    partial void OnCountInsuredChanged();
    partial void OnCountInsuredRepresentativeChanging(System.Nullable<decimal> value);
    partial void OnCountInsuredRepresentativeChanged();
    partial void OnCountTfomsChanging(System.Nullable<decimal> value);
    partial void OnCountTfomsChanged();
    partial void OnCountProsecutorChanging(System.Nullable<decimal> value);
    partial void OnCountProsecutorChanged();
    partial void OnCountOutOfSmoChanging(System.Nullable<decimal> value);
    partial void OnCountOutOfSmoChanged();
    partial void OnCountAmbulatoryChanging(System.Nullable<decimal> value);
    partial void OnCountAmbulatoryChanged();
    partial void OnCountDsChanging(System.Nullable<decimal> value);
    partial void OnCountDsChanged();
    partial void OnCountDsVmpChanging(System.Nullable<decimal> value);
    partial void OnCountDsVmpChanged();
    partial void OnCountStacChanging(decimal value);
    partial void OnCountStacChanged();
    partial void OnCountStacVmpChanging(System.Nullable<decimal> value);
    partial void OnCountStacVmpChanged();
    partial void OnCountOutOfSmoAnotherChanging(System.Nullable<decimal> value);
    partial void OnCountOutOfSmoAnotherChanged();
    partial void OnCountAmbulatoryAnotherChanging(System.Nullable<decimal> value);
    partial void OnCountAmbulatoryAnotherChanged();
    partial void OnCountDsAnotherChanging(System.Nullable<decimal> value);
    partial void OnCountDsAnotherChanged();
    partial void OnCountDsVmpAnotherChanging(System.Nullable<decimal> value);
    partial void OnCountDsVmpAnotherChanged();
    partial void OnCountStacAnotherChanging(System.Nullable<decimal> value);
    partial void OnCountStacAnotherChanged();
    partial void OnCountStacVmpAnotherChanging(System.Nullable<decimal> value);
    partial void OnCountStacVmpAnotherChanged();
    #endregion
		
		public Report_Pg()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Data", DbType="Int NOT NULL")]
		public int Id_Report_Data
		{
			get
			{
				return this._Id_Report_Data;
			}
			set
			{
				if ((this._Id_Report_Data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Data = value;
					this.SendPropertyChanged("Id_Report_Data");
					this.OnId_Report_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this.OnRowNumChanging(value);
					this.SendPropertyChanging();
					this._RowNum = value;
					this.SendPropertyChanged("RowNum");
					this.OnRowNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountSmo", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> CountSmo
		{
			get
			{
				return this._CountSmo;
			}
			set
			{
				if ((this._CountSmo != value))
				{
					this.OnCountSmoChanging(value);
					this.SendPropertyChanging();
					this._CountSmo = value;
					this.SendPropertyChanged("CountSmo");
					this.OnCountSmoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountSmoAnother", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> CountSmoAnother
		{
			get
			{
				return this._CountSmoAnother;
			}
			set
			{
				if ((this._CountSmoAnother != value))
				{
					this.OnCountSmoAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountSmoAnother = value;
					this.SendPropertyChanged("CountSmoAnother");
					this.OnCountSmoAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountInsured", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> CountInsured
		{
			get
			{
				return this._CountInsured;
			}
			set
			{
				if ((this._CountInsured != value))
				{
					this.OnCountInsuredChanging(value);
					this.SendPropertyChanging();
					this._CountInsured = value;
					this.SendPropertyChanged("CountInsured");
					this.OnCountInsuredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountInsuredRepresentative", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> CountInsuredRepresentative
		{
			get
			{
				return this._CountInsuredRepresentative;
			}
			set
			{
				if ((this._CountInsuredRepresentative != value))
				{
					this.OnCountInsuredRepresentativeChanging(value);
					this.SendPropertyChanging();
					this._CountInsuredRepresentative = value;
					this.SendPropertyChanged("CountInsuredRepresentative");
					this.OnCountInsuredRepresentativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountTfoms", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> CountTfoms
		{
			get
			{
				return this._CountTfoms;
			}
			set
			{
				if ((this._CountTfoms != value))
				{
					this.OnCountTfomsChanging(value);
					this.SendPropertyChanging();
					this._CountTfoms = value;
					this.SendPropertyChanged("CountTfoms");
					this.OnCountTfomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountProsecutor", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> CountProsecutor
		{
			get
			{
				return this._CountProsecutor;
			}
			set
			{
				if ((this._CountProsecutor != value))
				{
					this.OnCountProsecutorChanging(value);
					this.SendPropertyChanging();
					this._CountProsecutor = value;
					this.SendPropertyChanged("CountProsecutor");
					this.OnCountProsecutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOutOfSmo", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountOutOfSmo
		{
			get
			{
				return this._CountOutOfSmo;
			}
			set
			{
				if ((this._CountOutOfSmo != value))
				{
					this.OnCountOutOfSmoChanging(value);
					this.SendPropertyChanging();
					this._CountOutOfSmo = value;
					this.SendPropertyChanged("CountOutOfSmo");
					this.OnCountOutOfSmoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountAmbulatory", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountAmbulatory
		{
			get
			{
				return this._CountAmbulatory;
			}
			set
			{
				if ((this._CountAmbulatory != value))
				{
					this.OnCountAmbulatoryChanging(value);
					this.SendPropertyChanging();
					this._CountAmbulatory = value;
					this.SendPropertyChanged("CountAmbulatory");
					this.OnCountAmbulatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountDs", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountDs
		{
			get
			{
				return this._CountDs;
			}
			set
			{
				if ((this._CountDs != value))
				{
					this.OnCountDsChanging(value);
					this.SendPropertyChanging();
					this._CountDs = value;
					this.SendPropertyChanged("CountDs");
					this.OnCountDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountDsVmp", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountDsVmp
		{
			get
			{
				return this._CountDsVmp;
			}
			set
			{
				if ((this._CountDsVmp != value))
				{
					this.OnCountDsVmpChanging(value);
					this.SendPropertyChanging();
					this._CountDsVmp = value;
					this.SendPropertyChanged("CountDsVmp");
					this.OnCountDsVmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountStac", DbType="Decimal(15,3) NOT NULL")]
		public decimal CountStac
		{
			get
			{
				return this._CountStac;
			}
			set
			{
				if ((this._CountStac != value))
				{
					this.OnCountStacChanging(value);
					this.SendPropertyChanging();
					this._CountStac = value;
					this.SendPropertyChanged("CountStac");
					this.OnCountStacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountStacVmp", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountStacVmp
		{
			get
			{
				return this._CountStacVmp;
			}
			set
			{
				if ((this._CountStacVmp != value))
				{
					this.OnCountStacVmpChanging(value);
					this.SendPropertyChanging();
					this._CountStacVmp = value;
					this.SendPropertyChanged("CountStacVmp");
					this.OnCountStacVmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOutOfSmoAnother", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountOutOfSmoAnother
		{
			get
			{
				return this._CountOutOfSmoAnother;
			}
			set
			{
				if ((this._CountOutOfSmoAnother != value))
				{
					this.OnCountOutOfSmoAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountOutOfSmoAnother = value;
					this.SendPropertyChanged("CountOutOfSmoAnother");
					this.OnCountOutOfSmoAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountAmbulatoryAnother", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountAmbulatoryAnother
		{
			get
			{
				return this._CountAmbulatoryAnother;
			}
			set
			{
				if ((this._CountAmbulatoryAnother != value))
				{
					this.OnCountAmbulatoryAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountAmbulatoryAnother = value;
					this.SendPropertyChanged("CountAmbulatoryAnother");
					this.OnCountAmbulatoryAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountDsAnother", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountDsAnother
		{
			get
			{
				return this._CountDsAnother;
			}
			set
			{
				if ((this._CountDsAnother != value))
				{
					this.OnCountDsAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountDsAnother = value;
					this.SendPropertyChanged("CountDsAnother");
					this.OnCountDsAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountDsVmpAnother", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountDsVmpAnother
		{
			get
			{
				return this._CountDsVmpAnother;
			}
			set
			{
				if ((this._CountDsVmpAnother != value))
				{
					this.OnCountDsVmpAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountDsVmpAnother = value;
					this.SendPropertyChanged("CountDsVmpAnother");
					this.OnCountDsVmpAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountStacAnother", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountStacAnother
		{
			get
			{
				return this._CountStacAnother;
			}
			set
			{
				if ((this._CountStacAnother != value))
				{
					this.OnCountStacAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountStacAnother = value;
					this.SendPropertyChanged("CountStacAnother");
					this.OnCountStacAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountStacVmpAnother", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CountStacVmpAnother
		{
			get
			{
				return this._CountStacVmpAnother;
			}
			set
			{
				if ((this._CountStacVmpAnother != value))
				{
					this.OnCountStacVmpAnotherChanging(value);
					this.SendPropertyChanging();
					this._CountStacVmpAnother = value;
					this.SendPropertyChanged("CountStacVmpAnother");
					this.OnCountStacVmpAnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Pg", Storage="_Report_Data", ThisKey="Id_Report_Data", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_Pg.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_Pg.Add(this);
						this._Id_Report_Data = value.Id;
					}
					else
					{
						this._Id_Report_Data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativCpnpFederal")]
	public partial class NormativCpnpFederal
	{
		
		private int _year;
		
		private double _value;
		
		public NormativCpnpFederal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this._year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativCpnpRegion")]
	public partial class NormativCpnpRegion
	{
		
		private string _id_region;
		
		private int _year;
		
		private double _value;
		
		public NormativCpnpRegion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_region", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string id_region
		{
			get
			{
				return this._id_region;
			}
			set
			{
				if ((this._id_region != value))
				{
					this._id_region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this._year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Dynamic_Flow")]
	public partial class Report_Dynamic_Flow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _Id_Report_Dynamic;
		
		private string _Id_Region;
		
		private int _Id_Employee;
		
		private System.DateTime _Created;
		
		private string _Status;
		
		private EntitySet<Scan_Dynamic> _Scan_Dynamics;
		
		private EntitySet<Report_Dynamic_Data> _Report_Dynamic_Datas;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Region> _Region;
		
		private EntityRef<Report_Dynamic> _Report_Dynamic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnId_Report_DynamicChanging(int value);
    partial void OnId_Report_DynamicChanged();
    partial void OnId_RegionChanging(string value);
    partial void OnId_RegionChanged();
    partial void OnId_EmployeeChanging(int value);
    partial void OnId_EmployeeChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Report_Dynamic_Flow()
		{
			this._Scan_Dynamics = new EntitySet<Scan_Dynamic>(new Action<Scan_Dynamic>(this.attach_Scan_Dynamics), new Action<Scan_Dynamic>(this.detach_Scan_Dynamics));
			this._Report_Dynamic_Datas = new EntitySet<Report_Dynamic_Data>(new Action<Report_Dynamic_Data>(this.attach_Report_Dynamic_Datas), new Action<Report_Dynamic_Data>(this.detach_Report_Dynamic_Datas));
			this._Employee = default(EntityRef<Employee>);
			this._Region = default(EntityRef<Region>);
			this._Report_Dynamic = default(EntityRef<Report_Dynamic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Dynamic", DbType="Int NOT NULL")]
		public int Id_Report_Dynamic
		{
			get
			{
				return this._Id_Report_Dynamic;
			}
			set
			{
				if ((this._Id_Report_Dynamic != value))
				{
					if (this._Report_Dynamic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DynamicChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Dynamic = value;
					this.SendPropertyChanged("Id_Report_Dynamic");
					this.OnId_Report_DynamicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Region", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Id_Region
		{
			get
			{
				return this._Id_Region;
			}
			set
			{
				if ((this._Id_Region != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RegionChanging(value);
					this.SendPropertyChanging();
					this._Id_Region = value;
					this.SendPropertyChanged("Id_Region");
					this.OnId_RegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Employee", DbType="Int NOT NULL")]
		public int Id_Employee
		{
			get
			{
				return this._Id_Employee;
			}
			set
			{
				if ((this._Id_Employee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EmployeeChanging(value);
					this.SendPropertyChanging();
					this._Id_Employee = value;
					this.SendPropertyChanged("Id_Employee");
					this.OnId_EmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Dynamic_Flow_Scan_Dynamic", Storage="_Scan_Dynamics", ThisKey="id", OtherKey="IdFlow")]
		public EntitySet<Scan_Dynamic> Scan_Dynamics
		{
			get
			{
				return this._Scan_Dynamics;
			}
			set
			{
				this._Scan_Dynamics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Dynamic_Flow_Report_Dynamic_Data", Storage="_Report_Dynamic_Datas", ThisKey="id", OtherKey="Id_Flow")]
		public EntitySet<Report_Dynamic_Data> Report_Dynamic_Datas
		{
			get
			{
				return this._Report_Dynamic_Datas;
			}
			set
			{
				this._Report_Dynamic_Datas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report_Dynamic_Flow", Storage="_Employee", ThisKey="Id_Employee", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Report_Dynamic_Flow.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Report_Dynamic_Flow.Add(this);
						this._Id_Employee = value.Id;
					}
					else
					{
						this._Id_Employee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Report_Dynamic_Flow", Storage="_Region", ThisKey="Id_Region", OtherKey="id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Report_Dynamic_Flow.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Report_Dynamic_Flow.Add(this);
						this._Id_Region = value.id;
					}
					else
					{
						this._Id_Region = default(string);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Dynamic_Report_Dynamic_Flow", Storage="_Report_Dynamic", ThisKey="Id_Report_Dynamic", OtherKey="id", IsForeignKey=true)]
		public Report_Dynamic Report_Dynamic
		{
			get
			{
				return this._Report_Dynamic.Entity;
			}
			set
			{
				Report_Dynamic previousValue = this._Report_Dynamic.Entity;
				if (((previousValue != value) 
							|| (this._Report_Dynamic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Dynamic.Entity = null;
						previousValue.Report_Dynamic_Flow.Remove(this);
					}
					this._Report_Dynamic.Entity = value;
					if ((value != null))
					{
						value.Report_Dynamic_Flow.Add(this);
						this._Id_Report_Dynamic = value.id;
					}
					else
					{
						this._Id_Report_Dynamic = default(int);
					}
					this.SendPropertyChanged("Report_Dynamic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Scan_Dynamics(Scan_Dynamic entity)
		{
			this.SendPropertyChanging();
			entity.Report_Dynamic_Flow = this;
		}
		
		private void detach_Scan_Dynamics(Scan_Dynamic entity)
		{
			this.SendPropertyChanging();
			entity.Report_Dynamic_Flow = null;
		}
		
		private void attach_Report_Dynamic_Datas(Report_Dynamic_Data entity)
		{
			this.SendPropertyChanging();
			entity.Report_Dynamic_Flow = this;
		}
		
		private void detach_Report_Dynamic_Datas(Report_Dynamic_Data entity)
		{
			this.SendPropertyChanging();
			entity.Report_Dynamic_Flow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Dynamic")]
	public partial class Report_Dynamic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.DateTime _Date;
		
		private int _UserCreated;
		
		private string _Description;
		
		private bool _IsUserRow;
		
		private string _FileName;
		
		private EntitySet<Report_Dynamic_Flow> _Report_Dynamic_Flow;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUserCreatedChanging(int value);
    partial void OnUserCreatedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsUserRowChanging(bool value);
    partial void OnIsUserRowChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public Report_Dynamic()
		{
			this._Report_Dynamic_Flow = new EntitySet<Report_Dynamic_Flow>(new Action<Report_Dynamic_Flow>(this.attach_Report_Dynamic_Flow), new Action<Report_Dynamic_Flow>(this.detach_Report_Dynamic_Flow));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Char(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreated", DbType="Int NOT NULL")]
		public int UserCreated
		{
			get
			{
				return this._UserCreated;
			}
			set
			{
				if ((this._UserCreated != value))
				{
					this.OnUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._UserCreated = value;
					this.SendPropertyChanged("UserCreated");
					this.OnUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserRow", DbType="Bit NOT NULL")]
		public bool IsUserRow
		{
			get
			{
				return this._IsUserRow;
			}
			set
			{
				if ((this._IsUserRow != value))
				{
					this.OnIsUserRowChanging(value);
					this.SendPropertyChanging();
					this._IsUserRow = value;
					this.SendPropertyChanged("IsUserRow");
					this.OnIsUserRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Dynamic_Report_Dynamic_Flow", Storage="_Report_Dynamic_Flow", ThisKey="id", OtherKey="Id_Report_Dynamic")]
		public EntitySet<Report_Dynamic_Flow> Report_Dynamic_Flow
		{
			get
			{
				return this._Report_Dynamic_Flow;
			}
			set
			{
				this._Report_Dynamic_Flow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report_Dynamic", Storage="_Employee", ThisKey="id", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Report_Dynamic = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Report_Dynamic = this;
						this._id = value.Id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report_Dynamic_Flow(Report_Dynamic_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Report_Dynamic = this;
		}
		
		private void detach_Report_Dynamic_Flow(Report_Dynamic_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Report_Dynamic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Flow")]
	public partial class Report_Flow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Id_Region;
		
		private System.Nullable<int> _Id_Employee;
		
		private string _Id_Report_Type;
		
		private string _Yymm;
		
		private System.DateTime _Created;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private System.Nullable<int> _Id_Employee_Upd;
		
		private System.Nullable<int> _Version;
		
		private string _Scan;
		
		private System.Nullable<System.DateTime> _Date_to_co;
		
		private System.Nullable<int> _User_to_co;
		
		private System.Nullable<System.DateTime> _Date_edit_co;
		
		private System.Nullable<int> _User_edit_co;
		
		private System.Nullable<System.DateTime> _Date_is_done;
		
		private System.Nullable<int> _User_submit;
		
		private string _Status;
		
		private string _Scan2;
		
		private string _Scan3;
		
		private EntitySet<Report_Data> _Report_Data;
		
		private EntitySet<Comment> _Comment;
		
		private EntitySet<Scans_Base> _Scans_Bases;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Region> _Region;
		
		private EntityRef<Report_Type> _Report_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_RegionChanging(string value);
    partial void OnId_RegionChanged();
    partial void OnId_EmployeeChanging(System.Nullable<int> value);
    partial void OnId_EmployeeChanged();
    partial void OnId_Report_TypeChanging(string value);
    partial void OnId_Report_TypeChanged();
    partial void OnYymmChanging(string value);
    partial void OnYymmChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    partial void OnId_Employee_UpdChanging(System.Nullable<int> value);
    partial void OnId_Employee_UpdChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnScanChanging(string value);
    partial void OnScanChanged();
    partial void OnDate_to_coChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_to_coChanged();
    partial void OnUser_to_coChanging(System.Nullable<int> value);
    partial void OnUser_to_coChanged();
    partial void OnDate_edit_coChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_edit_coChanged();
    partial void OnUser_edit_coChanging(System.Nullable<int> value);
    partial void OnUser_edit_coChanged();
    partial void OnDate_is_doneChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_is_doneChanged();
    partial void OnUser_submitChanging(System.Nullable<int> value);
    partial void OnUser_submitChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnScan2Changing(string value);
    partial void OnScan2Changed();
    partial void OnScan3Changing(string value);
    partial void OnScan3Changed();
    #endregion
		
		public Report_Flow()
		{
			this._Report_Data = new EntitySet<Report_Data>(new Action<Report_Data>(this.attach_Report_Data), new Action<Report_Data>(this.detach_Report_Data));
			this._Comment = new EntitySet<Comment>(new Action<Comment>(this.attach_Comment), new Action<Comment>(this.detach_Comment));
			this._Scans_Bases = new EntitySet<Scans_Base>(new Action<Scans_Base>(this.attach_Scans_Bases), new Action<Scans_Base>(this.detach_Scans_Bases));
			this._Employee = default(EntityRef<Employee>);
			this._Region = default(EntityRef<Region>);
			this._Report_Type = default(EntityRef<Report_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Region", DbType="VarChar(10)")]
		public string Id_Region
		{
			get
			{
				return this._Id_Region;
			}
			set
			{
				if ((this._Id_Region != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RegionChanging(value);
					this.SendPropertyChanging();
					this._Id_Region = value;
					this.SendPropertyChanged("Id_Region");
					this.OnId_RegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Employee", DbType="Int")]
		public System.Nullable<int> Id_Employee
		{
			get
			{
				return this._Id_Employee;
			}
			set
			{
				if ((this._Id_Employee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EmployeeChanging(value);
					this.SendPropertyChanging();
					this._Id_Employee = value;
					this.SendPropertyChanged("Id_Employee");
					this.OnId_EmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Type", DbType="VarChar(10)")]
		public string Id_Report_Type
		{
			get
			{
				return this._Id_Report_Type;
			}
			set
			{
				if ((this._Id_Report_Type != value))
				{
					if (this._Report_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_TypeChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Type = value;
					this.SendPropertyChanged("Id_Report_Type");
					this.OnId_Report_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yymm", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string Yymm
		{
			get
			{
				return this._Yymm;
			}
			set
			{
				if ((this._Yymm != value))
				{
					this.OnYymmChanging(value);
					this.SendPropertyChanging();
					this._Yymm = value;
					this.SendPropertyChanged("Yymm");
					this.OnYymmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Employee_Upd", DbType="Int")]
		public System.Nullable<int> Id_Employee_Upd
		{
			get
			{
				return this._Id_Employee_Upd;
			}
			set
			{
				if ((this._Id_Employee_Upd != value))
				{
					this.OnId_Employee_UpdChanging(value);
					this.SendPropertyChanging();
					this._Id_Employee_Upd = value;
					this.SendPropertyChanged("Id_Employee_Upd");
					this.OnId_Employee_UpdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan", DbType="VarChar(200)")]
		public string Scan
		{
			get
			{
				return this._Scan;
			}
			set
			{
				if ((this._Scan != value))
				{
					this.OnScanChanging(value);
					this.SendPropertyChanging();
					this._Scan = value;
					this.SendPropertyChanged("Scan");
					this.OnScanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_to_co", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_to_co
		{
			get
			{
				return this._Date_to_co;
			}
			set
			{
				if ((this._Date_to_co != value))
				{
					this.OnDate_to_coChanging(value);
					this.SendPropertyChanging();
					this._Date_to_co = value;
					this.SendPropertyChanged("Date_to_co");
					this.OnDate_to_coChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_to_co", DbType="Int")]
		public System.Nullable<int> User_to_co
		{
			get
			{
				return this._User_to_co;
			}
			set
			{
				if ((this._User_to_co != value))
				{
					this.OnUser_to_coChanging(value);
					this.SendPropertyChanging();
					this._User_to_co = value;
					this.SendPropertyChanged("User_to_co");
					this.OnUser_to_coChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_edit_co", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_edit_co
		{
			get
			{
				return this._Date_edit_co;
			}
			set
			{
				if ((this._Date_edit_co != value))
				{
					this.OnDate_edit_coChanging(value);
					this.SendPropertyChanging();
					this._Date_edit_co = value;
					this.SendPropertyChanged("Date_edit_co");
					this.OnDate_edit_coChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_edit_co", DbType="Int")]
		public System.Nullable<int> User_edit_co
		{
			get
			{
				return this._User_edit_co;
			}
			set
			{
				if ((this._User_edit_co != value))
				{
					this.OnUser_edit_coChanging(value);
					this.SendPropertyChanging();
					this._User_edit_co = value;
					this.SendPropertyChanged("User_edit_co");
					this.OnUser_edit_coChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_is_done", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_is_done
		{
			get
			{
				return this._Date_is_done;
			}
			set
			{
				if ((this._Date_is_done != value))
				{
					this.OnDate_is_doneChanging(value);
					this.SendPropertyChanging();
					this._Date_is_done = value;
					this.SendPropertyChanged("Date_is_done");
					this.OnDate_is_doneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_submit", DbType="Int")]
		public System.Nullable<int> User_submit
		{
			get
			{
				return this._User_submit;
			}
			set
			{
				if ((this._User_submit != value))
				{
					this.OnUser_submitChanging(value);
					this.SendPropertyChanging();
					this._User_submit = value;
					this.SendPropertyChanged("User_submit");
					this.OnUser_submitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan2", DbType="VarChar(200)")]
		public string Scan2
		{
			get
			{
				return this._Scan2;
			}
			set
			{
				if ((this._Scan2 != value))
				{
					this.OnScan2Changing(value);
					this.SendPropertyChanging();
					this._Scan2 = value;
					this.SendPropertyChanged("Scan2");
					this.OnScan2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scan3", DbType="VarChar(200)")]
		public string Scan3
		{
			get
			{
				return this._Scan3;
			}
			set
			{
				if ((this._Scan3 != value))
				{
					this.OnScan3Changing(value);
					this.SendPropertyChanging();
					this._Scan3 = value;
					this.SendPropertyChanged("Scan3");
					this.OnScan3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Flow_Report_Data", Storage="_Report_Data", ThisKey="Id", OtherKey="Id_Flow")]
		public EntitySet<Report_Data> Report_Data
		{
			get
			{
				return this._Report_Data;
			}
			set
			{
				this._Report_Data.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Flow_Comment", Storage="_Comment", ThisKey="Id", OtherKey="Id_Flow")]
		public EntitySet<Comment> Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				this._Comment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Flow_Scans_Base", Storage="_Scans_Bases", ThisKey="Id", OtherKey="Id_flow")]
		public EntitySet<Scans_Base> Scans_Bases
		{
			get
			{
				return this._Scans_Bases;
			}
			set
			{
				this._Scans_Bases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Report_Flow", Storage="_Employee", ThisKey="Id_Employee", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Report_Flow.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Report_Flow.Add(this);
						this._Id_Employee = value.Id;
					}
					else
					{
						this._Id_Employee = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Report_Flow", Storage="_Region", ThisKey="Id_Region", OtherKey="id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				if ((this._Region.Entity != value))
				{
					this.SendPropertyChanging();
					this._Region.Entity = value;
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Type_Report_Flow", Storage="_Report_Type", ThisKey="Id_Report_Type", OtherKey="Id", IsForeignKey=true)]
		public Report_Type Report_Type
		{
			get
			{
				return this._Report_Type.Entity;
			}
			set
			{
				Report_Type previousValue = this._Report_Type.Entity;
				if (((previousValue != value) 
							|| (this._Report_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Type.Entity = null;
						previousValue.Report_Flows.Remove(this);
					}
					this._Report_Type.Entity = value;
					if ((value != null))
					{
						value.Report_Flows.Add(this);
						this._Id_Report_Type = value.Id;
					}
					else
					{
						this._Id_Report_Type = default(string);
					}
					this.SendPropertyChanged("Report_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Report_Data(Report_Data entity)
		{
			this.SendPropertyChanging();
			entity.Report_Flow = this;
		}
		
		private void detach_Report_Data(Report_Data entity)
		{
			this.SendPropertyChanging();
			entity.Report_Flow = null;
		}
		
		private void attach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Report_Flow = this;
		}
		
		private void detach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Report_Flow = null;
		}
		
		private void attach_Scans_Bases(Scans_Base entity)
		{
			this.SendPropertyChanging();
			entity.Report_Flow = this;
		}
		
		private void detach_Scans_Bases(Scans_Base entity)
		{
			this.SendPropertyChanging();
			entity.Report_Flow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Email")]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Email1;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnEmail1Changing(string value);
    partial void OnEmail1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Email()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Email", Storage="_Email1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email1
		{
			get
			{
				return this._Email1;
			}
			set
			{
				if ((this._Email1 != value))
				{
					this.OnEmail1Changing(value);
					this.SendPropertyChanging();
					this._Email1 = value;
					this.SendPropertyChanged("Email1");
					this.OnEmail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_InfrormationResponse")]
	public partial class Report_InfrormationResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Plan;
		
		private int _Informed;
		
		private int _CountRegistry;
		
		private int _CountPast;
		
		private int _Id_Report_Data;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPlanChanging(int value);
    partial void OnPlanChanged();
    partial void OnInformedChanging(int value);
    partial void OnInformedChanged();
    partial void OnCountRegistryChanging(int value);
    partial void OnCountRegistryChanged();
    partial void OnCountPastChanging(int value);
    partial void OnCountPastChanged();
    partial void OnId_Report_DataChanging(int value);
    partial void OnId_Report_DataChanged();
    #endregion
		
		public Report_InfrormationResponse()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Plan]", Storage="_Plan", DbType="Int NOT NULL")]
		public int Plan
		{
			get
			{
				return this._Plan;
			}
			set
			{
				if ((this._Plan != value))
				{
					this.OnPlanChanging(value);
					this.SendPropertyChanging();
					this._Plan = value;
					this.SendPropertyChanged("Plan");
					this.OnPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Informed", DbType="Int NOT NULL")]
		public int Informed
		{
			get
			{
				return this._Informed;
			}
			set
			{
				if ((this._Informed != value))
				{
					this.OnInformedChanging(value);
					this.SendPropertyChanging();
					this._Informed = value;
					this.SendPropertyChanged("Informed");
					this.OnInformedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountRegistry", DbType="Int NOT NULL")]
		public int CountRegistry
		{
			get
			{
				return this._CountRegistry;
			}
			set
			{
				if ((this._CountRegistry != value))
				{
					this.OnCountRegistryChanging(value);
					this.SendPropertyChanging();
					this._CountRegistry = value;
					this.SendPropertyChanged("CountRegistry");
					this.OnCountRegistryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountPast", DbType="Int NOT NULL")]
		public int CountPast
		{
			get
			{
				return this._CountPast;
			}
			set
			{
				if ((this._CountPast != value))
				{
					this.OnCountPastChanging(value);
					this.SendPropertyChanging();
					this._CountPast = value;
					this.SendPropertyChanged("CountPast");
					this.OnCountPastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Data", DbType="Int NOT NULL")]
		public int Id_Report_Data
		{
			get
			{
				return this._Id_Report_Data;
			}
			set
			{
				if ((this._Id_Report_Data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Data = value;
					this.SendPropertyChanged("Id_Report_Data");
					this.OnId_Report_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_InfrormationResponse", Storage="_Report_Data", ThisKey="Id_Report_Data", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_InfrormationResponses.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_InfrormationResponses.Add(this);
						this._Id_Report_Data = value.Id;
					}
					else
					{
						this._Id_Report_Data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Oped")]
	public partial class Report_Oped : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _App;
		
		private decimal _Ks;
		
		private decimal _Ds;
		
		private string _Notes;
		
		private int _Id_Report_Data;
		
		private string _RowNum;
		
		private decimal _Smp;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAppChanging(decimal value);
    partial void OnAppChanged();
    partial void OnKsChanging(decimal value);
    partial void OnKsChanged();
    partial void OnDsChanging(decimal value);
    partial void OnDsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnId_Report_DataChanging(int value);
    partial void OnId_Report_DataChanged();
    partial void OnRowNumChanging(string value);
    partial void OnRowNumChanged();
    partial void OnSmpChanging(decimal value);
    partial void OnSmpChanged();
    #endregion
		
		public Report_Oped()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_App", DbType="Decimal(15,3) NOT NULL")]
		public decimal App
		{
			get
			{
				return this._App;
			}
			set
			{
				if ((this._App != value))
				{
					this.OnAppChanging(value);
					this.SendPropertyChanging();
					this._App = value;
					this.SendPropertyChanged("App");
					this.OnAppChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ks", DbType="Decimal(15,3) NOT NULL")]
		public decimal Ks
		{
			get
			{
				return this._Ks;
			}
			set
			{
				if ((this._Ks != value))
				{
					this.OnKsChanging(value);
					this.SendPropertyChanging();
					this._Ks = value;
					this.SendPropertyChanged("Ks");
					this.OnKsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ds", DbType="Decimal(15,3) NOT NULL")]
		public decimal Ds
		{
			get
			{
				return this._Ds;
			}
			set
			{
				if ((this._Ds != value))
				{
					this.OnDsChanging(value);
					this.SendPropertyChanging();
					this._Ds = value;
					this.SendPropertyChanged("Ds");
					this.OnDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Data", DbType="Int NOT NULL")]
		public int Id_Report_Data
		{
			get
			{
				return this._Id_Report_Data;
			}
			set
			{
				if ((this._Id_Report_Data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Data = value;
					this.SendPropertyChanged("Id_Report_Data");
					this.OnId_Report_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this.OnRowNumChanging(value);
					this.SendPropertyChanging();
					this._RowNum = value;
					this.SendPropertyChanged("RowNum");
					this.OnRowNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Smp", DbType="Decimal(15,3) NOT NULL")]
		public decimal Smp
		{
			get
			{
				return this._Smp;
			}
			set
			{
				if ((this._Smp != value))
				{
					this.OnSmpChanging(value);
					this.SendPropertyChanging();
					this._Smp = value;
					this.SendPropertyChanged("Smp");
					this.OnSmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Oped", Storage="_Report_Data", ThisKey="Id_Report_Data", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_Opeds.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_Opeds.Add(this);
						this._Id_Report_Data = value.Id;
					}
					else
					{
						this._Id_Report_Data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Vaccination")]
	public partial class Report_Vaccination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Report_data;
		
		private int _m_18_39;
		
		private int _m_40_59;
		
		private int _m_60_65;
		
		private int _m_66_74;
		
		private int _m_75_more;
		
		private int _w_18_39;
		
		private int _w_40_54;
		
		private int _w_55_65;
		
		private int _w_66_74;
		
		private int _w_75_more;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_Report_dataChanging(int value);
    partial void OnId_Report_dataChanged();
    partial void Onm_18_39Changing(int value);
    partial void Onm_18_39Changed();
    partial void Onm_40_59Changing(int value);
    partial void Onm_40_59Changed();
    partial void Onm_60_65Changing(int value);
    partial void Onm_60_65Changed();
    partial void Onm_66_74Changing(int value);
    partial void Onm_66_74Changed();
    partial void Onm_75_moreChanging(int value);
    partial void Onm_75_moreChanged();
    partial void Onw_18_39Changing(int value);
    partial void Onw_18_39Changed();
    partial void Onw_40_54Changing(int value);
    partial void Onw_40_54Changed();
    partial void Onw_55_65Changing(int value);
    partial void Onw_55_65Changed();
    partial void Onw_66_74Changing(int value);
    partial void Onw_66_74Changed();
    partial void Onw_75_moreChanging(int value);
    partial void Onw_75_moreChanged();
    #endregion
		
		public Report_Vaccination()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_data", DbType="Int NOT NULL")]
		public int Id_Report_data
		{
			get
			{
				return this._Id_Report_data;
			}
			set
			{
				if ((this._Id_Report_data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_dataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_data = value;
					this.SendPropertyChanged("Id_Report_data");
					this.OnId_Report_dataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_18_39", DbType="Int NOT NULL")]
		public int m_18_39
		{
			get
			{
				return this._m_18_39;
			}
			set
			{
				if ((this._m_18_39 != value))
				{
					this.Onm_18_39Changing(value);
					this.SendPropertyChanging();
					this._m_18_39 = value;
					this.SendPropertyChanged("m_18_39");
					this.Onm_18_39Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_40_59", DbType="Int NOT NULL")]
		public int m_40_59
		{
			get
			{
				return this._m_40_59;
			}
			set
			{
				if ((this._m_40_59 != value))
				{
					this.Onm_40_59Changing(value);
					this.SendPropertyChanging();
					this._m_40_59 = value;
					this.SendPropertyChanged("m_40_59");
					this.Onm_40_59Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_60_65", DbType="Int NOT NULL")]
		public int m_60_65
		{
			get
			{
				return this._m_60_65;
			}
			set
			{
				if ((this._m_60_65 != value))
				{
					this.Onm_60_65Changing(value);
					this.SendPropertyChanging();
					this._m_60_65 = value;
					this.SendPropertyChanged("m_60_65");
					this.Onm_60_65Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_66_74", DbType="Int NOT NULL")]
		public int m_66_74
		{
			get
			{
				return this._m_66_74;
			}
			set
			{
				if ((this._m_66_74 != value))
				{
					this.Onm_66_74Changing(value);
					this.SendPropertyChanging();
					this._m_66_74 = value;
					this.SendPropertyChanged("m_66_74");
					this.Onm_66_74Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_75_more", DbType="Int NOT NULL")]
		public int m_75_more
		{
			get
			{
				return this._m_75_more;
			}
			set
			{
				if ((this._m_75_more != value))
				{
					this.Onm_75_moreChanging(value);
					this.SendPropertyChanging();
					this._m_75_more = value;
					this.SendPropertyChanged("m_75_more");
					this.Onm_75_moreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_w_18_39", DbType="Int NOT NULL")]
		public int w_18_39
		{
			get
			{
				return this._w_18_39;
			}
			set
			{
				if ((this._w_18_39 != value))
				{
					this.Onw_18_39Changing(value);
					this.SendPropertyChanging();
					this._w_18_39 = value;
					this.SendPropertyChanged("w_18_39");
					this.Onw_18_39Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_w_40_54", DbType="Int NOT NULL")]
		public int w_40_54
		{
			get
			{
				return this._w_40_54;
			}
			set
			{
				if ((this._w_40_54 != value))
				{
					this.Onw_40_54Changing(value);
					this.SendPropertyChanging();
					this._w_40_54 = value;
					this.SendPropertyChanged("w_40_54");
					this.Onw_40_54Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_w_55_65", DbType="Int NOT NULL")]
		public int w_55_65
		{
			get
			{
				return this._w_55_65;
			}
			set
			{
				if ((this._w_55_65 != value))
				{
					this.Onw_55_65Changing(value);
					this.SendPropertyChanging();
					this._w_55_65 = value;
					this.SendPropertyChanged("w_55_65");
					this.Onw_55_65Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_w_66_74", DbType="Int NOT NULL")]
		public int w_66_74
		{
			get
			{
				return this._w_66_74;
			}
			set
			{
				if ((this._w_66_74 != value))
				{
					this.Onw_66_74Changing(value);
					this.SendPropertyChanging();
					this._w_66_74 = value;
					this.SendPropertyChanged("w_66_74");
					this.Onw_66_74Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_w_75_more", DbType="Int NOT NULL")]
		public int w_75_more
		{
			get
			{
				return this._w_75_more;
			}
			set
			{
				if ((this._w_75_more != value))
				{
					this.Onw_75_moreChanging(value);
					this.SendPropertyChanging();
					this._w_75_more = value;
					this.SendPropertyChanged("w_75_more");
					this.Onw_75_moreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Vaccination", Storage="_Report_Data", ThisKey="Id_Report_data", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_Vaccinations.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_Vaccinations.Add(this);
						this._Id_Report_data = value.Id;
					}
					else
					{
						this._Id_Report_data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scans_Base")]
	public partial class Scans_Base : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Scan;
		
		private string _File_Name;
		
		private int _Usr_added;
		
		private System.DateTime _Dte_added;
		
		private System.Nullable<int> _Usr_update;
		
		private System.Nullable<System.DateTime> _Dte_update;
		
		private int _Id_flow;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Report_Flow> _Report_Flow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ScanChanging(int value);
    partial void OnId_ScanChanged();
    partial void OnFile_NameChanging(string value);
    partial void OnFile_NameChanged();
    partial void OnUsr_addedChanging(int value);
    partial void OnUsr_addedChanged();
    partial void OnDte_addedChanging(System.DateTime value);
    partial void OnDte_addedChanged();
    partial void OnUsr_updateChanging(System.Nullable<int> value);
    partial void OnUsr_updateChanged();
    partial void OnDte_updateChanging(System.Nullable<System.DateTime> value);
    partial void OnDte_updateChanged();
    partial void OnId_flowChanging(int value);
    partial void OnId_flowChanged();
    #endregion
		
		public Scans_Base()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._Report_Flow = default(EntityRef<Report_Flow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Scan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Scan
		{
			get
			{
				return this._Id_Scan;
			}
			set
			{
				if ((this._Id_Scan != value))
				{
					this.OnId_ScanChanging(value);
					this.SendPropertyChanging();
					this._Id_Scan = value;
					this.SendPropertyChanged("Id_Scan");
					this.OnId_ScanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string File_Name
		{
			get
			{
				return this._File_Name;
			}
			set
			{
				if ((this._File_Name != value))
				{
					this.OnFile_NameChanging(value);
					this.SendPropertyChanging();
					this._File_Name = value;
					this.SendPropertyChanged("File_Name");
					this.OnFile_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usr_added", DbType="Int NOT NULL")]
		public int Usr_added
		{
			get
			{
				return this._Usr_added;
			}
			set
			{
				if ((this._Usr_added != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsr_addedChanging(value);
					this.SendPropertyChanging();
					this._Usr_added = value;
					this.SendPropertyChanged("Usr_added");
					this.OnUsr_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dte_added", DbType="Date NOT NULL")]
		public System.DateTime Dte_added
		{
			get
			{
				return this._Dte_added;
			}
			set
			{
				if ((this._Dte_added != value))
				{
					this.OnDte_addedChanging(value);
					this.SendPropertyChanging();
					this._Dte_added = value;
					this.SendPropertyChanged("Dte_added");
					this.OnDte_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usr_update", DbType="Int")]
		public System.Nullable<int> Usr_update
		{
			get
			{
				return this._Usr_update;
			}
			set
			{
				if ((this._Usr_update != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsr_updateChanging(value);
					this.SendPropertyChanging();
					this._Usr_update = value;
					this.SendPropertyChanged("Usr_update");
					this.OnUsr_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dte_update", DbType="Date")]
		public System.Nullable<System.DateTime> Dte_update
		{
			get
			{
				return this._Dte_update;
			}
			set
			{
				if ((this._Dte_update != value))
				{
					this.OnDte_updateChanging(value);
					this.SendPropertyChanging();
					this._Dte_update = value;
					this.SendPropertyChanged("Dte_update");
					this.OnDte_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_flow", DbType="Int NOT NULL")]
		public int Id_flow
		{
			get
			{
				return this._Id_flow;
			}
			set
			{
				if ((this._Id_flow != value))
				{
					if (this._Report_Flow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_flowChanging(value);
					this.SendPropertyChanging();
					this._Id_flow = value;
					this.SendPropertyChanged("Id_flow");
					this.OnId_flowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Scans_Base", Storage="_Employee", ThisKey="Usr_added", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Scans_Bases.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Scans_Bases.Add(this);
						this._Usr_added = value.Id;
					}
					else
					{
						this._Usr_added = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Scans_Base1", Storage="_Employee1", ThisKey="Usr_update", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Scans_Bases1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Scans_Bases1.Add(this);
						this._Usr_update = value.Id;
					}
					else
					{
						this._Usr_update = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Flow_Scans_Base", Storage="_Report_Flow", ThisKey="Id_flow", OtherKey="Id", IsForeignKey=true)]
		public Report_Flow Report_Flow
		{
			get
			{
				return this._Report_Flow.Entity;
			}
			set
			{
				Report_Flow previousValue = this._Report_Flow.Entity;
				if (((previousValue != value) 
							|| (this._Report_Flow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Flow.Entity = null;
						previousValue.Scans_Bases.Remove(this);
					}
					this._Report_Flow.Entity = value;
					if ((value != null))
					{
						value.Scans_Bases.Add(this);
						this._Id_flow = value.Id;
					}
					else
					{
						this._Id_flow = default(int);
					}
					this.SendPropertyChanged("Report_Flow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FSSMonitroing")]
	public partial class FSSMonitroing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_FssMonitoring;
		
		private string _RowNum;
		
		private System.Nullable<decimal> _ExpertWithEducation;
		
		private System.Nullable<decimal> _ExpertWithoutEducation;
		
		private int _Id_ReportData;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_FssMonitoringChanging(int value);
    partial void OnId_FssMonitoringChanged();
    partial void OnRowNumChanging(string value);
    partial void OnRowNumChanged();
    partial void OnExpertWithEducationChanging(System.Nullable<decimal> value);
    partial void OnExpertWithEducationChanged();
    partial void OnExpertWithoutEducationChanging(System.Nullable<decimal> value);
    partial void OnExpertWithoutEducationChanged();
    partial void OnId_ReportDataChanging(int value);
    partial void OnId_ReportDataChanged();
    #endregion
		
		public FSSMonitroing()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_FssMonitoring", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_FssMonitoring
		{
			get
			{
				return this._Id_FssMonitoring;
			}
			set
			{
				if ((this._Id_FssMonitoring != value))
				{
					this.OnId_FssMonitoringChanging(value);
					this.SendPropertyChanging();
					this._Id_FssMonitoring = value;
					this.SendPropertyChanged("Id_FssMonitoring");
					this.OnId_FssMonitoringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNum", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string RowNum
		{
			get
			{
				return this._RowNum;
			}
			set
			{
				if ((this._RowNum != value))
				{
					this.OnRowNumChanging(value);
					this.SendPropertyChanging();
					this._RowNum = value;
					this.SendPropertyChanged("RowNum");
					this.OnRowNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertWithEducation", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> ExpertWithEducation
		{
			get
			{
				return this._ExpertWithEducation;
			}
			set
			{
				if ((this._ExpertWithEducation != value))
				{
					this.OnExpertWithEducationChanging(value);
					this.SendPropertyChanging();
					this._ExpertWithEducation = value;
					this.SendPropertyChanged("ExpertWithEducation");
					this.OnExpertWithEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertWithoutEducation", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> ExpertWithoutEducation
		{
			get
			{
				return this._ExpertWithoutEducation;
			}
			set
			{
				if ((this._ExpertWithoutEducation != value))
				{
					this.OnExpertWithoutEducationChanging(value);
					this.SendPropertyChanging();
					this._ExpertWithoutEducation = value;
					this.SendPropertyChanged("ExpertWithoutEducation");
					this.OnExpertWithoutEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ReportData", DbType="Int NOT NULL")]
		public int Id_ReportData
		{
			get
			{
				return this._Id_ReportData;
			}
			set
			{
				if ((this._Id_ReportData != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ReportDataChanging(value);
					this.SendPropertyChanging();
					this._Id_ReportData = value;
					this.SendPropertyChanged("Id_ReportData");
					this.OnId_ReportDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_FSSMonitroing", Storage="_Report_Data", ThisKey="Id_ReportData", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.FSSMonitroings.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.FSSMonitroings.Add(this);
						this._Id_ReportData = value.Id;
					}
					else
					{
						this._Id_ReportData = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scan_Dynamic")]
	public partial class Scan_Dynamic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_DynamicScan;
		
		private string _FileName;
		
		private int _IdFlow;
		
		private EntityRef<Report_Dynamic_Flow> _Report_Dynamic_Flow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_DynamicScanChanging(int value);
    partial void Onid_DynamicScanChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnIdFlowChanging(int value);
    partial void OnIdFlowChanged();
    #endregion
		
		public Scan_Dynamic()
		{
			this._Report_Dynamic_Flow = default(EntityRef<Report_Dynamic_Flow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_DynamicScan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_DynamicScan
		{
			get
			{
				return this._id_DynamicScan;
			}
			set
			{
				if ((this._id_DynamicScan != value))
				{
					this.Onid_DynamicScanChanging(value);
					this.SendPropertyChanging();
					this._id_DynamicScan = value;
					this.SendPropertyChanged("id_DynamicScan");
					this.Onid_DynamicScanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFlow", DbType="Int NOT NULL")]
		public int IdFlow
		{
			get
			{
				return this._IdFlow;
			}
			set
			{
				if ((this._IdFlow != value))
				{
					if (this._Report_Dynamic_Flow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFlowChanging(value);
					this.SendPropertyChanging();
					this._IdFlow = value;
					this.SendPropertyChanged("IdFlow");
					this.OnIdFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Dynamic_Flow_Scan_Dynamic", Storage="_Report_Dynamic_Flow", ThisKey="IdFlow", OtherKey="id", IsForeignKey=true)]
		public Report_Dynamic_Flow Report_Dynamic_Flow
		{
			get
			{
				return this._Report_Dynamic_Flow.Entity;
			}
			set
			{
				Report_Dynamic_Flow previousValue = this._Report_Dynamic_Flow.Entity;
				if (((previousValue != value) 
							|| (this._Report_Dynamic_Flow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Dynamic_Flow.Entity = null;
						previousValue.Scan_Dynamics.Remove(this);
					}
					this._Report_Dynamic_Flow.Entity = value;
					if ((value != null))
					{
						value.Scan_Dynamics.Add(this);
						this._IdFlow = value.id;
					}
					else
					{
						this._IdFlow = default(int);
					}
					this.SendPropertyChanged("Report_Dynamic_Flow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Dynamic_Data")]
	public partial class Report_Dynamic_Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Id;
		
		private string _Value;
		
		private string _Position;
		
		private int _Id_Flow;
		
		private EntityRef<Report_Dynamic_Flow> _Report_Dynamic_Flow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(short value);
    partial void OnIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnId_FlowChanging(int value);
    partial void OnId_FlowChanged();
    #endregion
		
		public Report_Dynamic_Data()
		{
			this._Report_Dynamic_Flow = default(EntityRef<Report_Dynamic_Flow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Flow", DbType="Int NOT NULL")]
		public int Id_Flow
		{
			get
			{
				return this._Id_Flow;
			}
			set
			{
				if ((this._Id_Flow != value))
				{
					if (this._Report_Dynamic_Flow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_FlowChanging(value);
					this.SendPropertyChanging();
					this._Id_Flow = value;
					this.SendPropertyChanged("Id_Flow");
					this.OnId_FlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Dynamic_Flow_Report_Dynamic_Data", Storage="_Report_Dynamic_Flow", ThisKey="Id_Flow", OtherKey="id", IsForeignKey=true)]
		public Report_Dynamic_Flow Report_Dynamic_Flow
		{
			get
			{
				return this._Report_Dynamic_Flow.Entity;
			}
			set
			{
				Report_Dynamic_Flow previousValue = this._Report_Dynamic_Flow.Entity;
				if (((previousValue != value) 
							|| (this._Report_Dynamic_Flow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Dynamic_Flow.Entity = null;
						previousValue.Report_Dynamic_Datas.Remove(this);
					}
					this._Report_Dynamic_Flow.Entity = value;
					if ((value != null))
					{
						value.Report_Dynamic_Datas.Add(this);
						this._Id_Flow = value.id;
					}
					else
					{
						this._Id_Flow = default(int);
					}
					this.SendPropertyChanged("Report_Dynamic_Flow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Proposal")]
	public partial class Report_Proposal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ReportProposal;
		
		private int _id_ReportData;
		
		private System.Nullable<int> _Count_MoCheck;
		
		private System.Nullable<int> _Count_MoCheckWithDefect;
		
		private System.Nullable<int> _Count_Proporsals;
		
		private System.Nullable<int> _Count_ProporsalsWithDefect;
		
		private string _Notes;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ReportProposalChanging(int value);
    partial void Onid_ReportProposalChanged();
    partial void Onid_ReportDataChanging(int value);
    partial void Onid_ReportDataChanged();
    partial void OnCount_MoCheckChanging(System.Nullable<int> value);
    partial void OnCount_MoCheckChanged();
    partial void OnCount_MoCheckWithDefectChanging(System.Nullable<int> value);
    partial void OnCount_MoCheckWithDefectChanged();
    partial void OnCount_ProporsalsChanging(System.Nullable<int> value);
    partial void OnCount_ProporsalsChanged();
    partial void OnCount_ProporsalsWithDefectChanging(System.Nullable<int> value);
    partial void OnCount_ProporsalsWithDefectChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Report_Proposal()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ReportProposal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ReportProposal
		{
			get
			{
				return this._id_ReportProposal;
			}
			set
			{
				if ((this._id_ReportProposal != value))
				{
					this.Onid_ReportProposalChanging(value);
					this.SendPropertyChanging();
					this._id_ReportProposal = value;
					this.SendPropertyChanged("id_ReportProposal");
					this.Onid_ReportProposalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ReportData", DbType="Int NOT NULL")]
		public int id_ReportData
		{
			get
			{
				return this._id_ReportData;
			}
			set
			{
				if ((this._id_ReportData != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ReportDataChanging(value);
					this.SendPropertyChanging();
					this._id_ReportData = value;
					this.SendPropertyChanged("id_ReportData");
					this.Onid_ReportDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_MoCheck", DbType="Int")]
		public System.Nullable<int> Count_MoCheck
		{
			get
			{
				return this._Count_MoCheck;
			}
			set
			{
				if ((this._Count_MoCheck != value))
				{
					this.OnCount_MoCheckChanging(value);
					this.SendPropertyChanging();
					this._Count_MoCheck = value;
					this.SendPropertyChanged("Count_MoCheck");
					this.OnCount_MoCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_MoCheckWithDefect", DbType="Int")]
		public System.Nullable<int> Count_MoCheckWithDefect
		{
			get
			{
				return this._Count_MoCheckWithDefect;
			}
			set
			{
				if ((this._Count_MoCheckWithDefect != value))
				{
					this.OnCount_MoCheckWithDefectChanging(value);
					this.SendPropertyChanging();
					this._Count_MoCheckWithDefect = value;
					this.SendPropertyChanged("Count_MoCheckWithDefect");
					this.OnCount_MoCheckWithDefectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Proporsals", DbType="Int")]
		public System.Nullable<int> Count_Proporsals
		{
			get
			{
				return this._Count_Proporsals;
			}
			set
			{
				if ((this._Count_Proporsals != value))
				{
					this.OnCount_ProporsalsChanging(value);
					this.SendPropertyChanging();
					this._Count_Proporsals = value;
					this.SendPropertyChanged("Count_Proporsals");
					this.OnCount_ProporsalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_ProporsalsWithDefect", DbType="Int")]
		public System.Nullable<int> Count_ProporsalsWithDefect
		{
			get
			{
				return this._Count_ProporsalsWithDefect;
			}
			set
			{
				if ((this._Count_ProporsalsWithDefect != value))
				{
					this.OnCount_ProporsalsWithDefectChanging(value);
					this.SendPropertyChanging();
					this._Count_ProporsalsWithDefect = value;
					this.SendPropertyChanged("Count_ProporsalsWithDefect");
					this.OnCount_ProporsalsWithDefectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Proposal", Storage="_Report_Data", ThisKey="id_ReportData", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_Proposals.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_Proposals.Add(this);
						this._id_ReportData = value.Id;
					}
					else
					{
						this._id_ReportData = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_OpedFinance")]
	public partial class Report_OpedFinance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_OpedFinance;
		
		private string _row_num;
		
		private System.Nullable<decimal> _value_fact;
		
		private string _notes;
		
		private int _id_ReportData;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_OpedFinanceChanging(int value);
    partial void Onid_OpedFinanceChanged();
    partial void Onrow_numChanging(string value);
    partial void Onrow_numChanged();
    partial void Onvalue_factChanging(System.Nullable<decimal> value);
    partial void Onvalue_factChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Onid_ReportDataChanging(int value);
    partial void Onid_ReportDataChanged();
    #endregion
		
		public Report_OpedFinance()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_OpedFinance", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_OpedFinance
		{
			get
			{
				return this._id_OpedFinance;
			}
			set
			{
				if ((this._id_OpedFinance != value))
				{
					this.Onid_OpedFinanceChanging(value);
					this.SendPropertyChanging();
					this._id_OpedFinance = value;
					this.SendPropertyChanged("id_OpedFinance");
					this.Onid_OpedFinanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_num", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string row_num
		{
			get
			{
				return this._row_num;
			}
			set
			{
				if ((this._row_num != value))
				{
					this.Onrow_numChanging(value);
					this.SendPropertyChanging();
					this._row_num = value;
					this.SendPropertyChanged("row_num");
					this.Onrow_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value_fact", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> value_fact
		{
			get
			{
				return this._value_fact;
			}
			set
			{
				if ((this._value_fact != value))
				{
					this.Onvalue_factChanging(value);
					this.SendPropertyChanging();
					this._value_fact = value;
					this.SendPropertyChanged("value_fact");
					this.Onvalue_factChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(1500)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ReportData", DbType="Int NOT NULL")]
		public int id_ReportData
		{
			get
			{
				return this._id_ReportData;
			}
			set
			{
				if ((this._id_ReportData != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ReportDataChanging(value);
					this.SendPropertyChanging();
					this._id_ReportData = value;
					this.SendPropertyChanged("id_ReportData");
					this.Onid_ReportDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_OpedFinance", Storage="_Report_Data", ThisKey="id_ReportData", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_OpedFinances.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_OpedFinances.Add(this);
						this._id_ReportData = value.Id;
					}
					else
					{
						this._id_ReportData = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OpedFinancePlan")]
	public partial class OpedFinancePlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_OpedFinancePlan;
		
		private string _Yymm;
		
		private decimal _Value;
		
		private string _Id_Region;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_OpedFinancePlanChanging(int value);
    partial void OnId_OpedFinancePlanChanged();
    partial void OnYymmChanging(string value);
    partial void OnYymmChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnId_RegionChanging(string value);
    partial void OnId_RegionChanged();
    #endregion
		
		public OpedFinancePlan()
		{
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_OpedFinancePlan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_OpedFinancePlan
		{
			get
			{
				return this._Id_OpedFinancePlan;
			}
			set
			{
				if ((this._Id_OpedFinancePlan != value))
				{
					this.OnId_OpedFinancePlanChanging(value);
					this.SendPropertyChanging();
					this._Id_OpedFinancePlan = value;
					this.SendPropertyChanged("Id_OpedFinancePlan");
					this.OnId_OpedFinancePlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yymm", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string Yymm
		{
			get
			{
				return this._Yymm;
			}
			set
			{
				if ((this._Yymm != value))
				{
					this.OnYymmChanging(value);
					this.SendPropertyChanging();
					this._Yymm = value;
					this.SendPropertyChanged("Yymm");
					this.OnYymmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(15,2) NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Region", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Id_Region
		{
			get
			{
				return this._Id_Region;
			}
			set
			{
				if ((this._Id_Region != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RegionChanging(value);
					this.SendPropertyChanging();
					this._Id_Region = value;
					this.SendPropertyChanged("Id_Region");
					this.OnId_RegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_OpedFinancePlan", Storage="_Region", ThisKey="Id_Region", OtherKey="id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.OpedFinancePlans.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.OpedFinancePlans.Add(this);
						this._Id_Region = value.id;
					}
					else
					{
						this._Id_Region = default(string);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Type")]
	public partial class Report_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private int _Deadline_day;
		
		private string _Period;
		
		private string _YymmEnd;
		
		private EntitySet<Responsible_Employee> _Responsible_Employees;
		
		private EntitySet<Report_Data> _Report_Datas;
		
		private EntitySet<Report_Flow> _Report_Flows;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeadline_dayChanging(int value);
    partial void OnDeadline_dayChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnYymmEndChanging(string value);
    partial void OnYymmEndChanged();
    #endregion
		
		public Report_Type()
		{
			this._Responsible_Employees = new EntitySet<Responsible_Employee>(new Action<Responsible_Employee>(this.attach_Responsible_Employees), new Action<Responsible_Employee>(this.detach_Responsible_Employees));
			this._Report_Datas = new EntitySet<Report_Data>(new Action<Report_Data>(this.attach_Report_Datas), new Action<Report_Data>(this.detach_Report_Datas));
			this._Report_Flows = new EntitySet<Report_Flow>(new Action<Report_Flow>(this.attach_Report_Flows), new Action<Report_Flow>(this.detach_Report_Flows));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deadline_day", DbType="Int NOT NULL")]
		public int Deadline_day
		{
			get
			{
				return this._Deadline_day;
			}
			set
			{
				if ((this._Deadline_day != value))
				{
					this.OnDeadline_dayChanging(value);
					this.SendPropertyChanging();
					this._Deadline_day = value;
					this.SendPropertyChanged("Deadline_day");
					this.OnDeadline_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="VarChar(10)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YymmEnd", DbType="VarChar(4)")]
		public string YymmEnd
		{
			get
			{
				return this._YymmEnd;
			}
			set
			{
				if ((this._YymmEnd != value))
				{
					this.OnYymmEndChanging(value);
					this.SendPropertyChanging();
					this._YymmEnd = value;
					this.SendPropertyChanged("YymmEnd");
					this.OnYymmEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Type_Responsible_Employee", Storage="_Responsible_Employees", ThisKey="Id", OtherKey="Id_Report")]
		public EntitySet<Responsible_Employee> Responsible_Employees
		{
			get
			{
				return this._Responsible_Employees;
			}
			set
			{
				this._Responsible_Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Type_Report_Data", Storage="_Report_Datas", ThisKey="Id", OtherKey="Id_Report")]
		public EntitySet<Report_Data> Report_Datas
		{
			get
			{
				return this._Report_Datas;
			}
			set
			{
				this._Report_Datas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Type_Report_Flow", Storage="_Report_Flows", ThisKey="Id", OtherKey="Id_Report_Type")]
		public EntitySet<Report_Flow> Report_Flows
		{
			get
			{
				return this._Report_Flows;
			}
			set
			{
				this._Report_Flows.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Responsible_Employees(Responsible_Employee entity)
		{
			this.SendPropertyChanging();
			entity.Report_Type = this;
		}
		
		private void detach_Responsible_Employees(Responsible_Employee entity)
		{
			this.SendPropertyChanging();
			entity.Report_Type = null;
		}
		
		private void attach_Report_Datas(Report_Data entity)
		{
			this.SendPropertyChanging();
			entity.Report_Type = this;
		}
		
		private void detach_Report_Datas(Report_Data entity)
		{
			this.SendPropertyChanging();
			entity.Report_Type = null;
		}
		
		private void attach_Report_Flows(Report_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Report_Type = this;
		}
		
		private void detach_Report_Flows(Report_Flow entity)
		{
			this.SendPropertyChanging();
			entity.Report_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Iilz")]
	public partial class Report_Iilz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Report_Data;
		
		private string _Code;
		
		private System.Nullable<int> _Count_Pers_First;
		
		private System.Nullable<int> _Count_Pers_Repeat;
		
		private System.Nullable<int> _Count_Messages;
		
		private System.Nullable<decimal> _Total_Cost;
		
		private string _Accounting_Document;
		
		private System.Nullable<decimal> _average_cost_per_message;
		
		private System.Nullable<decimal> _average_cost_of_informing_1_PL;
		
		private EntityRef<Report_Data> _Report_Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_Report_DataChanging(int value);
    partial void OnId_Report_DataChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCount_Pers_FirstChanging(System.Nullable<int> value);
    partial void OnCount_Pers_FirstChanged();
    partial void OnCount_Pers_RepeatChanging(System.Nullable<int> value);
    partial void OnCount_Pers_RepeatChanged();
    partial void OnCount_MessagesChanging(System.Nullable<int> value);
    partial void OnCount_MessagesChanged();
    partial void OnTotal_CostChanging(System.Nullable<decimal> value);
    partial void OnTotal_CostChanged();
    partial void OnAccounting_DocumentChanging(string value);
    partial void OnAccounting_DocumentChanged();
    partial void Onaverage_cost_per_messageChanging(System.Nullable<decimal> value);
    partial void Onaverage_cost_per_messageChanged();
    partial void Onaverage_cost_of_informing_1_PLChanging(System.Nullable<decimal> value);
    partial void Onaverage_cost_of_informing_1_PLChanged();
    #endregion
		
		public Report_Iilz()
		{
			this._Report_Data = default(EntityRef<Report_Data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Report_Data", DbType="Int NOT NULL")]
		public int Id_Report_Data
		{
			get
			{
				return this._Id_Report_Data;
			}
			set
			{
				if ((this._Id_Report_Data != value))
				{
					if (this._Report_Data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_Report_DataChanging(value);
					this.SendPropertyChanging();
					this._Id_Report_Data = value;
					this.SendPropertyChanged("Id_Report_Data");
					this.OnId_Report_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Pers_First", DbType="Int")]
		public System.Nullable<int> Count_Pers_First
		{
			get
			{
				return this._Count_Pers_First;
			}
			set
			{
				if ((this._Count_Pers_First != value))
				{
					this.OnCount_Pers_FirstChanging(value);
					this.SendPropertyChanging();
					this._Count_Pers_First = value;
					this.SendPropertyChanged("Count_Pers_First");
					this.OnCount_Pers_FirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Pers_Repeat", DbType="Int")]
		public System.Nullable<int> Count_Pers_Repeat
		{
			get
			{
				return this._Count_Pers_Repeat;
			}
			set
			{
				if ((this._Count_Pers_Repeat != value))
				{
					this.OnCount_Pers_RepeatChanging(value);
					this.SendPropertyChanging();
					this._Count_Pers_Repeat = value;
					this.SendPropertyChanged("Count_Pers_Repeat");
					this.OnCount_Pers_RepeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_Messages", DbType="Int")]
		public System.Nullable<int> Count_Messages
		{
			get
			{
				return this._Count_Messages;
			}
			set
			{
				if ((this._Count_Messages != value))
				{
					this.OnCount_MessagesChanging(value);
					this.SendPropertyChanging();
					this._Count_Messages = value;
					this.SendPropertyChanged("Count_Messages");
					this.OnCount_MessagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Cost", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> Total_Cost
		{
			get
			{
				return this._Total_Cost;
			}
			set
			{
				if ((this._Total_Cost != value))
				{
					this.OnTotal_CostChanging(value);
					this.SendPropertyChanging();
					this._Total_Cost = value;
					this.SendPropertyChanged("Total_Cost");
					this.OnTotal_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accounting_Document", DbType="VarChar(MAX)")]
		public string Accounting_Document
		{
			get
			{
				return this._Accounting_Document;
			}
			set
			{
				if ((this._Accounting_Document != value))
				{
					this.OnAccounting_DocumentChanging(value);
					this.SendPropertyChanging();
					this._Accounting_Document = value;
					this.SendPropertyChanged("Accounting_Document");
					this.OnAccounting_DocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_average_cost_per_message", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> average_cost_per_message
		{
			get
			{
				return this._average_cost_per_message;
			}
			set
			{
				if ((this._average_cost_per_message != value))
				{
					this.Onaverage_cost_per_messageChanging(value);
					this.SendPropertyChanging();
					this._average_cost_per_message = value;
					this.SendPropertyChanged("average_cost_per_message");
					this.Onaverage_cost_per_messageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_average_cost_of_informing_1_PL", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> average_cost_of_informing_1_PL
		{
			get
			{
				return this._average_cost_of_informing_1_PL;
			}
			set
			{
				if ((this._average_cost_of_informing_1_PL != value))
				{
					this.Onaverage_cost_of_informing_1_PLChanging(value);
					this.SendPropertyChanging();
					this._average_cost_of_informing_1_PL = value;
					this.SendPropertyChanged("average_cost_of_informing_1_PL");
					this.Onaverage_cost_of_informing_1_PLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Report_Data_Report_Iilz", Storage="_Report_Data", ThisKey="Id_Report_Data", OtherKey="Id", IsForeignKey=true)]
		public Report_Data Report_Data
		{
			get
			{
				return this._Report_Data.Entity;
			}
			set
			{
				Report_Data previousValue = this._Report_Data.Entity;
				if (((previousValue != value) 
							|| (this._Report_Data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Report_Data.Entity = null;
						previousValue.Report_Iilzs.Remove(this);
					}
					this._Report_Data.Entity = value;
					if ((value != null))
					{
						value.Report_Iilzs.Add(this);
						this._Id_Report_Data = value.Id;
					}
					else
					{
						this._Id_Report_Data = default(int);
					}
					this.SendPropertyChanged("Report_Data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
